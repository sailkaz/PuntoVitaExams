// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PuntoVitaExams.API.DbContexts;

#nullable disable

namespace PuntoVitaExams.API.Migrations
{
    [DbContext(typeof(ExamContext))]
    [Migration("20230418075842_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExaminationCommitteeExaminationCommitteeMember", b =>
                {
                    b.Property<int>("ExaminationCommitteeMembersExaminationCommitteeMemberId")
                        .HasColumnType("int");

                    b.Property<int>("ExaminationCommitteesExaminationCommitteeId")
                        .HasColumnType("int");

                    b.HasKey("ExaminationCommitteeMembersExaminationCommitteeMemberId", "ExaminationCommitteesExaminationCommitteeId");

                    b.HasIndex("ExaminationCommitteesExaminationCommitteeId");

                    b.ToTable("ExaminationCommitteeExaminationCommitteeMember");
                });

            modelBuilder.Entity("PuntoVitaExams.API.Entities.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FlatNumber")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.ToTable("Addressess");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            City = "Chorzów",
                            FlatNumber = 15,
                            PostalCode = "38-143",
                            Street = "Gołębia",
                            StreetNumber = "37a"
                        },
                        new
                        {
                            AddressId = 2,
                            City = "Jelenia Góra",
                            PostalCode = "96-813",
                            Street = "Podgórna",
                            StreetNumber = "12"
                        },
                        new
                        {
                            AddressId = 3,
                            City = "Zamość",
                            FlatNumber = 29,
                            PostalCode = "03-413",
                            Street = "Dębowa",
                            StreetNumber = "23"
                        });
                });

            modelBuilder.Entity("PuntoVitaExams.API.Entities.ExaminationCommittee", b =>
                {
                    b.Property<int>("ExaminationCommitteeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExaminationCommitteeId"));

                    b.Property<int?>("ExaminationCommitteeHeadId")
                        .HasColumnType("int");

                    b.Property<int?>("ExaminationCommitteeSecretaryId")
                        .HasColumnType("int");

                    b.HasKey("ExaminationCommitteeId");

                    b.HasIndex("ExaminationCommitteeHeadId");

                    b.HasIndex("ExaminationCommitteeSecretaryId");

                    b.ToTable("ExaminationCommittees");

                    b.HasData(
                        new
                        {
                            ExaminationCommitteeId = 1
                        },
                        new
                        {
                            ExaminationCommitteeId = 2
                        },
                        new
                        {
                            ExaminationCommitteeId = 3
                        });
                });

            modelBuilder.Entity("PuntoVitaExams.API.Entities.ExaminationCommitteeHead", b =>
                {
                    b.Property<int>("ExaminationCommitteeHeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExaminationCommitteeHeadId"));

                    b.Property<string>("ExaminationCommitteeHeadFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExaminationCommitteeHeadLastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExaminationCommitteeHeadId");

                    b.ToTable("ExaminationCommitteeHeads");

                    b.HasData(
                        new
                        {
                            ExaminationCommitteeHeadId = 1,
                            ExaminationCommitteeHeadFirstName = "Wiesław",
                            ExaminationCommitteeHeadLastName = "Ogorzały"
                        },
                        new
                        {
                            ExaminationCommitteeHeadId = 2,
                            ExaminationCommitteeHeadFirstName = "Krzysztof",
                            ExaminationCommitteeHeadLastName = "Nieraczej"
                        });
                });

            modelBuilder.Entity("PuntoVitaExams.API.Entities.ExaminationCommitteeMember", b =>
                {
                    b.Property<int>("ExaminationCommitteeMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExaminationCommitteeMemberId"));

                    b.Property<string>("ExaminationCommitteeMemberFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExaminationCommitteeMemberLastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExaminationCommitteeMemberId");

                    b.ToTable("ExaminationCommitteeMembers");

                    b.HasData(
                        new
                        {
                            ExaminationCommitteeMemberId = 1,
                            ExaminationCommitteeMemberFirstName = "Maiola",
                            ExaminationCommitteeMemberLastName = "Rosochata"
                        },
                        new
                        {
                            ExaminationCommitteeMemberId = 2,
                            ExaminationCommitteeMemberFirstName = "Renata",
                            ExaminationCommitteeMemberLastName = "Koniec"
                        });
                });

            modelBuilder.Entity("PuntoVitaExams.API.Entities.ExaminationCommitteeSecretary", b =>
                {
                    b.Property<int>("ExaminationCommitteeSecretaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExaminationCommitteeSecretaryId"));

                    b.Property<string>("ExaminationCommitteeSecretaryFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExaminationCommitteeSecretaryLastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExaminationCommitteeSecretaryId");

                    b.ToTable("ExaminationCommitteeSecretaries");

                    b.HasData(
                        new
                        {
                            ExaminationCommitteeSecretaryId = 1,
                            ExaminationCommitteeSecretaryFirstName = "Karol",
                            ExaminationCommitteeSecretaryLastName = "Wyczesany"
                        },
                        new
                        {
                            ExaminationCommitteeSecretaryId = 2,
                            ExaminationCommitteeSecretaryFirstName = "Michał",
                            ExaminationCommitteeSecretaryLastName = "Zaradek"
                        });
                });

            modelBuilder.Entity("PuntoVitaExams.API.Entities.SailingExam", b =>
                {
                    b.Property<int>("SailingExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SailingExamId"));

                    b.Property<int>("ExaminationCommitteeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SailingExamDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SailingExamNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SailingExamPlace")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SailingExamId");

                    b.HasIndex("ExaminationCommitteeId");

                    b.ToTable("SailingExams");

                    b.HasData(
                        new
                        {
                            SailingExamId = 1,
                            ExaminationCommitteeId = 2,
                            SailingExamDate = new DateTime(2023, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SailingExamNumber = "PV/2/23",
                            SailingExamPlace = "Wilkasy"
                        });
                });

            modelBuilder.Entity("PuntoVitaExams.API.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pesel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("AddressId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            FirstName = "Jacek",
                            LastName = "Przekora",
                            Pesel = "258456963"
                        },
                        new
                        {
                            StudentId = 2,
                            FirstName = "Wojciech",
                            LastName = "Zapas",
                            Pesel = "369546129"
                        },
                        new
                        {
                            StudentId = 3,
                            FirstName = "Paweł",
                            LastName = "Zapas",
                            Pesel = "746952167"
                        },
                        new
                        {
                            StudentId = 4,
                            FirstName = "Grzegorz",
                            LastName = "Niespodziany",
                            Pesel = "974369542"
                        });
                });

            modelBuilder.Entity("SailingExamStudent", b =>
                {
                    b.Property<int>("SailingExamsSailingExamId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsStudentId")
                        .HasColumnType("int");

                    b.HasKey("SailingExamsSailingExamId", "StudentsStudentId");

                    b.HasIndex("StudentsStudentId");

                    b.ToTable("SailingExamStudent");
                });

            modelBuilder.Entity("ExaminationCommitteeExaminationCommitteeMember", b =>
                {
                    b.HasOne("PuntoVitaExams.API.Entities.ExaminationCommitteeMember", null)
                        .WithMany()
                        .HasForeignKey("ExaminationCommitteeMembersExaminationCommitteeMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PuntoVitaExams.API.Entities.ExaminationCommittee", null)
                        .WithMany()
                        .HasForeignKey("ExaminationCommitteesExaminationCommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PuntoVitaExams.API.Entities.ExaminationCommittee", b =>
                {
                    b.HasOne("PuntoVitaExams.API.Entities.ExaminationCommitteeHead", "ExaminationCommitteeHead")
                        .WithMany("ExaminationCommittees")
                        .HasForeignKey("ExaminationCommitteeHeadId");

                    b.HasOne("PuntoVitaExams.API.Entities.ExaminationCommitteeSecretary", "ExaminationCommitteeSecretary")
                        .WithMany("ExaminationCommittees")
                        .HasForeignKey("ExaminationCommitteeSecretaryId");

                    b.Navigation("ExaminationCommitteeHead");

                    b.Navigation("ExaminationCommitteeSecretary");
                });

            modelBuilder.Entity("PuntoVitaExams.API.Entities.SailingExam", b =>
                {
                    b.HasOne("PuntoVitaExams.API.Entities.ExaminationCommittee", "ExaminationCommittee")
                        .WithMany("SailingExams")
                        .HasForeignKey("ExaminationCommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExaminationCommittee");
                });

            modelBuilder.Entity("PuntoVitaExams.API.Entities.Student", b =>
                {
                    b.HasOne("PuntoVitaExams.API.Entities.Address", "Address")
                        .WithMany("Students")
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("SailingExamStudent", b =>
                {
                    b.HasOne("PuntoVitaExams.API.Entities.SailingExam", null)
                        .WithMany()
                        .HasForeignKey("SailingExamsSailingExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PuntoVitaExams.API.Entities.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PuntoVitaExams.API.Entities.Address", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("PuntoVitaExams.API.Entities.ExaminationCommittee", b =>
                {
                    b.Navigation("SailingExams");
                });

            modelBuilder.Entity("PuntoVitaExams.API.Entities.ExaminationCommitteeHead", b =>
                {
                    b.Navigation("ExaminationCommittees");
                });

            modelBuilder.Entity("PuntoVitaExams.API.Entities.ExaminationCommitteeSecretary", b =>
                {
                    b.Navigation("ExaminationCommittees");
                });
#pragma warning restore 612, 618
        }
    }
}
