2023-11-20 23:23:16.396 +01:00 [INF] User profile is available. Using 'C:\Users\Kazimierz Stasiński\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-20 23:23:16.630 +01:00 [INF] Creating key {9d2959df-73d4-4bea-8f77-59c5e192c117} with creation date 2023-11-20 22:23:16Z, activation date 2023-11-20 22:23:16Z, and expiration date 2024-02-18 22:23:16Z.
2023-11-20 23:23:16.651 +01:00 [INF] Writing data to file 'C:\Users\Kazimierz Stasiński\AppData\Local\ASP.NET\DataProtection-Keys\key-9d2959df-73d4-4bea-8f77-59c5e192c117.xml'.
2023-11-20 23:23:17.361 +01:00 [INF] Now listening on: https://localhost:7169
2023-11-20 23:23:17.371 +01:00 [INF] Now listening on: http://localhost:5080
2023-11-20 23:23:17.392 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-20 23:23:17.394 +01:00 [INF] Hosting environment: Development
2023-11-20 23:23:17.397 +01:00 [INF] Content root path: C:\Users\Kazimierz Stasiński\source\repos\PuntoVitaExams\PuntoVitaExams.API\
2023-11-20 23:33:06.076 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/login - -
2023-11-20 23:33:06.228 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:33:06.251 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/login - - - 204 - - 186.5579ms
2023-11-20 23:33:06.257 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2023-11-20 23:33:06.270 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:33:06.485 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2023-11-20 23:33:06.545 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:33:09.300 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2023-11-20 23:33:09.305 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:33:09.311 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2023-11-20 23:33:09.315 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:33:10.641 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2023-11-20 23:33:10.643 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:33:10.649 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2023-11-20 23:33:10.652 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:33:11.448 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/login - -
2023-11-20 23:33:11.450 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:33:11.451 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/login - - - 204 - - 2.9191ms
2023-11-20 23:33:11.452 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2023-11-20 23:33:11.453 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:33:11.454 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2023-11-20 23:33:11.455 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:33:13.597 +01:00 [INF] Executed DbCommand (226ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2023-11-20 23:33:13.597 +01:00 [INF] Executed DbCommand (226ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2023-11-20 23:33:13.597 +01:00 [INF] Executed DbCommand (226ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2023-11-20 23:33:13.597 +01:00 [INF] Executed DbCommand (226ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2023-11-20 23:33:14.470 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2023-11-20 23:33:14.470 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2023-11-20 23:33:14.470 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2023-11-20 23:33:14.470 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2023-11-20 23:33:14.501 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2023-11-20 23:33:14.501 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2023-11-20 23:33:14.501 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2023-11-20 23:33:14.501 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2023-11-20 23:33:14.617 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 3147.173ms
2023-11-20 23:33:14.617 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 3945.4965ms
2023-11-20 23:33:14.617 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 5286.7906ms
2023-11-20 23:33:14.617 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 8054.9535ms
2023-11-20 23:33:14.622 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2023-11-20 23:33:14.622 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2023-11-20 23:33:14.624 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2023-11-20 23:33:14.627 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2023-11-20 23:33:14.653 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2023-11-20 23:33:14.655 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:33:14.656 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2023-11-20 23:33:14.661 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 7.7701ms
2023-11-20 23:33:14.663 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:33:14.666 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2023-11-20 23:33:14.667 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 11.1111ms
2023-11-20 23:33:14.676 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2023-11-20 23:33:14.683 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 4042.5391ms
2023-11-20 23:33:14.684 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 5382.8252ms
2023-11-20 23:33:14.684 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 8427.6326ms
2023-11-20 23:33:14.684 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 3231.7069ms
2023-11-20 23:33:14.702 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:33:14.702 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:33:14.898 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:33:14.898 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2023-11-20 23:33:14.901 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:33:14.902 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:33:14.905 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-20 23:33:14.905 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-20 23:33:14.908 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 5.4138ms
2023-11-20 23:33:14.910 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 5.2902ms
2023-11-20 23:33:14.910 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:33:14.911 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2023-11-20 23:33:14.912 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 235.9069ms
2023-11-20 23:33:14.913 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 247.3932ms
2023-11-20 23:33:35.395 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2023-11-20 23:33:35.415 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:33:35.416 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2023-11-20 23:33:35.418 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 23.3164ms
2023-11-20 23:33:35.419 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:33:35.421 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2023-11-20 23:33:35.423 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 6.4409ms
2023-11-20 23:33:35.424 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:33:35.425 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2023-11-20 23:33:35.430 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:33:35.430 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2023-11-20 23:33:35.431 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:33:35.434 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:33:35.435 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:33:35.437 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-20 23:33:35.439 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-20 23:33:35.440 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 2.8319ms
2023-11-20 23:33:35.441 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 2.2596ms
2023-11-20 23:33:35.442 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2023-11-20 23:33:35.443 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:33:35.444 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 23.6788ms
2023-11-20 23:33:35.445 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 20.4318ms
2023-11-20 23:33:37.068 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2023-11-20 23:33:37.070 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:33:37.073 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:33:37.077 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:33:37.083 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-20 23:33:37.086 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 3.5692ms
2023-11-20 23:33:37.088 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:33:37.089 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 21.2498ms
2023-11-20 23:34:02.155 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-5-23 - -
2023-11-20 23:34:02.158 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:34:02.161 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-5-23 - - - 204 - - 6.3529ms
2023-11-20 23:34:02.163 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-5-23 - -
2023-11-20 23:34:02.164 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:34:02.165 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:34:02.169 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2023-11-20 23:34:02.239 +01:00 [INF] Executed DbCommand (13ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-11-20 23:34:02.518 +01:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-11-20 23:34:02.580 +01:00 [INF] Executed DbCommand (41ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[SailingExamId], [t].[ExaminationCommitteeId], [t].[SailingExamDate], [t].[SailingExamNumber], [t].[SailingExamPlace], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t0].[AddressId], [t0].[FirstName], [t0].[LastName], [t0].[Pesel], [t0].[Result], [t].[ExaminationCommitteeHeadId], [t].[ExaminationCommitteeSecretaryId], [t].[ExaminationCommitteeHeadFirstName], [t].[ExaminationCommitteeHeadLastName], [t].[ExaminationCommitteeSecretaryFirstName], [t].[ExaminationCommitteeSecretaryLastName], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId], [t1].[ExaminationCommitteeMemberId], [t1].[ExaminationCommitteeMemberFirstName], [t1].[ExaminationCommitteeMemberLastName]
FROM (
    SELECT TOP(1) [s].[SailingExamId], [s].[ExaminationCommitteeId], [s].[SailingExamDate], [s].[SailingExamNumber], [s].[SailingExamPlace], [e].[ExaminationCommitteeId] AS [ExaminationCommitteeId0], [e].[ExaminationCommitteeHeadId], [e].[ExaminationCommitteeSecretaryId], [e0].[ExaminationCommitteeHeadId] AS [ExaminationCommitteeHeadId0], [e0].[ExaminationCommitteeHeadFirstName], [e0].[ExaminationCommitteeHeadLastName], [e1].[ExaminationCommitteeSecretaryId] AS [ExaminationCommitteeSecretaryId0], [e1].[ExaminationCommitteeSecretaryFirstName], [e1].[ExaminationCommitteeSecretaryLastName]
    FROM [SailingExams] AS [s]
    LEFT JOIN [ExaminationCommittees] AS [e] ON [s].[ExaminationCommitteeId] = [e].[ExaminationCommitteeId]
    LEFT JOIN [ExaminationCommitteeHeads] AS [e0] ON [e].[ExaminationCommitteeHeadId] = [e0].[ExaminationCommitteeHeadId]
    LEFT JOIN [ExaminationCommitteeSecretaries] AS [e1] ON [e].[ExaminationCommitteeSecretaryId] = [e1].[ExaminationCommitteeSecretaryId]
    WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0
) AS [t]
LEFT JOIN (
    SELECT [s0].[SailingExamsSailingExamId], [s0].[StudentsStudentId], [s1].[StudentId], [s1].[AddressId], [s1].[FirstName], [s1].[LastName], [s1].[Pesel], [s1].[Result]
    FROM [SailingExamStudent] AS [s0]
    INNER JOIN [Students] AS [s1] ON [s0].[StudentsStudentId] = [s1].[StudentId]
) AS [t0] ON [t].[SailingExamId] = [t0].[SailingExamsSailingExamId]
LEFT JOIN (
    SELECT [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [e2].[ExaminationCommitteesExaminationCommitteeId], [e3].[ExaminationCommitteeMemberId], [e3].[ExaminationCommitteeMemberFirstName], [e3].[ExaminationCommitteeMemberLastName]
    FROM [ExaminationCommitteeExaminationCommitteeMember] AS [e2]
    INNER JOIN [ExaminationCommitteeMembers] AS [e3] ON [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId] = [e3].[ExaminationCommitteeMemberId]
) AS [t1] ON [t].[ExaminationCommitteeId0] = [t1].[ExaminationCommitteesExaminationCommitteeId]
ORDER BY [t].[SailingExamId], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId]
2023-11-20 23:34:02.801 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.SailingExamDto'.
2023-11-20 23:34:02.876 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 704.445ms
2023-11-20 23:34:02.879 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:34:02.885 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-5-23 - - - 200 794 application/json;+charset=utf-8 721.2744ms
2023-11-20 23:34:57.650 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-2-23 - -
2023-11-20 23:34:57.653 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:34:57.654 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-2-23 - - - 204 - - 4.9097ms
2023-11-20 23:34:57.656 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-2-23 - -
2023-11-20 23:34:57.658 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:34:57.660 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:34:57.662 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2023-11-20 23:34:57.668 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-11-20 23:34:57.818 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 154.583ms
2023-11-20 23:34:57.823 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:34:58.005 +01:00 [ERR] No exam with number PV-2-23 was found
2023-11-20 23:34:58.007 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-2-23 - - - 404 - - 350.7563ms
2023-11-20 23:35:10.485 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-1-23 - -
2023-11-20 23:35:10.489 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:35:10.490 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-1-23 - - - 204 - - 4.8782ms
2023-11-20 23:35:10.495 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-1-23 - -
2023-11-20 23:35:10.496 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:35:10.497 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:35:10.498 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2023-11-20 23:35:10.502 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-11-20 23:35:10.536 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 36.4918ms
2023-11-20 23:35:10.539 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:35:10.649 +01:00 [ERR] No exam with number PV-1-23 was found
2023-11-20 23:35:10.651 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-1-23 - - - 404 - - 156.0367ms
2023-11-20 23:35:21.419 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2023-11-20 23:35:21.434 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:35:21.436 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2023-11-20 23:35:21.437 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 17.8271ms
2023-11-20 23:35:21.438 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:35:21.438 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2023-11-20 23:35:21.441 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 4.7993ms
2023-11-20 23:35:21.442 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:35:21.443 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2023-11-20 23:35:21.445 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2023-11-20 23:35:21.445 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:35:21.446 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:35:21.447 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:35:21.448 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-20 23:35:21.450 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:35:21.451 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 2.637ms
2023-11-20 23:35:21.452 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-20 23:35:21.453 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2023-11-20 23:35:21.454 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 1.9155ms
2023-11-20 23:35:21.455 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 16.4957ms
2023-11-20 23:35:21.456 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:35:21.458 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 15.9626ms
2023-11-20 23:35:23.344 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2023-11-20 23:35:23.347 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:35:23.349 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:35:23.349 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:35:23.351 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-20 23:35:23.352 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 1.0503ms
2023-11-20 23:35:23.353 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:35:23.354 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 10.3015ms
2023-11-20 23:35:27.007 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2023-11-20 23:35:27.008 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2023-11-20 23:35:27.008 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:35:27.009 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:35:27.010 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 3.3094ms
2023-11-20 23:35:27.011 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 3.6733ms
2023-11-20 23:35:27.014 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2023-11-20 23:35:27.016 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2023-11-20 23:35:27.034 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:35:27.036 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:35:27.037 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2023-11-20 23:35:27.038 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:35:27.039 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:35:27.040 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:35:27.042 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-20 23:35:27.043 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-20 23:35:27.044 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 2.2405ms
2023-11-20 23:35:27.045 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 2.2867ms
2023-11-20 23:35:27.046 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2023-11-20 23:35:27.047 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:35:27.048 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 34.6684ms
2023-11-20 23:35:27.049 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 34.2141ms
2023-11-20 23:35:28.617 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2023-11-20 23:35:28.620 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:35:28.622 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:35:28.623 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:35:28.626 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-20 23:35:28.629 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 3.1773ms
2023-11-20 23:35:28.631 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:35:28.633 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 16.4583ms
2023-11-20 23:35:43.755 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-6-23 - -
2023-11-20 23:35:43.757 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:35:43.760 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-6-23 - - - 204 - - 5.4946ms
2023-11-20 23:35:43.763 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-6-23 - -
2023-11-20 23:35:43.763 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:35:43.765 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:35:43.767 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2023-11-20 23:35:43.773 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-11-20 23:35:43.778 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[SailingExamId], [t].[ExaminationCommitteeId], [t].[SailingExamDate], [t].[SailingExamNumber], [t].[SailingExamPlace], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t0].[AddressId], [t0].[FirstName], [t0].[LastName], [t0].[Pesel], [t0].[Result], [t].[ExaminationCommitteeHeadId], [t].[ExaminationCommitteeSecretaryId], [t].[ExaminationCommitteeHeadFirstName], [t].[ExaminationCommitteeHeadLastName], [t].[ExaminationCommitteeSecretaryFirstName], [t].[ExaminationCommitteeSecretaryLastName], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId], [t1].[ExaminationCommitteeMemberId], [t1].[ExaminationCommitteeMemberFirstName], [t1].[ExaminationCommitteeMemberLastName]
FROM (
    SELECT TOP(1) [s].[SailingExamId], [s].[ExaminationCommitteeId], [s].[SailingExamDate], [s].[SailingExamNumber], [s].[SailingExamPlace], [e].[ExaminationCommitteeId] AS [ExaminationCommitteeId0], [e].[ExaminationCommitteeHeadId], [e].[ExaminationCommitteeSecretaryId], [e0].[ExaminationCommitteeHeadId] AS [ExaminationCommitteeHeadId0], [e0].[ExaminationCommitteeHeadFirstName], [e0].[ExaminationCommitteeHeadLastName], [e1].[ExaminationCommitteeSecretaryId] AS [ExaminationCommitteeSecretaryId0], [e1].[ExaminationCommitteeSecretaryFirstName], [e1].[ExaminationCommitteeSecretaryLastName]
    FROM [SailingExams] AS [s]
    LEFT JOIN [ExaminationCommittees] AS [e] ON [s].[ExaminationCommitteeId] = [e].[ExaminationCommitteeId]
    LEFT JOIN [ExaminationCommitteeHeads] AS [e0] ON [e].[ExaminationCommitteeHeadId] = [e0].[ExaminationCommitteeHeadId]
    LEFT JOIN [ExaminationCommitteeSecretaries] AS [e1] ON [e].[ExaminationCommitteeSecretaryId] = [e1].[ExaminationCommitteeSecretaryId]
    WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0
) AS [t]
LEFT JOIN (
    SELECT [s0].[SailingExamsSailingExamId], [s0].[StudentsStudentId], [s1].[StudentId], [s1].[AddressId], [s1].[FirstName], [s1].[LastName], [s1].[Pesel], [s1].[Result]
    FROM [SailingExamStudent] AS [s0]
    INNER JOIN [Students] AS [s1] ON [s0].[StudentsStudentId] = [s1].[StudentId]
) AS [t0] ON [t].[SailingExamId] = [t0].[SailingExamsSailingExamId]
LEFT JOIN (
    SELECT [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [e2].[ExaminationCommitteesExaminationCommitteeId], [e3].[ExaminationCommitteeMemberId], [e3].[ExaminationCommitteeMemberFirstName], [e3].[ExaminationCommitteeMemberLastName]
    FROM [ExaminationCommitteeExaminationCommitteeMember] AS [e2]
    INNER JOIN [ExaminationCommitteeMembers] AS [e3] ON [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId] = [e3].[ExaminationCommitteeMemberId]
) AS [t1] ON [t].[ExaminationCommitteeId0] = [t1].[ExaminationCommitteesExaminationCommitteeId]
ORDER BY [t].[SailingExamId], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId]
2023-11-20 23:35:43.819 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 48.3033ms
2023-11-20 23:35:43.822 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:35:43.909 +01:00 [ERR] Exam with number PV-6-23 has no students or no committee
2023-11-20 23:35:43.911 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-6-23 - - - 404 - - 148.0322ms
2023-11-20 23:37:01.852 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-3-23 - -
2023-11-20 23:37:01.861 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:37:01.863 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-3-23 - - - 204 - - 10.7315ms
2023-11-20 23:37:01.864 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-3-23 - -
2023-11-20 23:37:01.865 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:37:01.867 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:37:01.869 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2023-11-20 23:37:01.875 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-11-20 23:37:01.877 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[SailingExamId], [t].[ExaminationCommitteeId], [t].[SailingExamDate], [t].[SailingExamNumber], [t].[SailingExamPlace], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t0].[AddressId], [t0].[FirstName], [t0].[LastName], [t0].[Pesel], [t0].[Result], [t].[ExaminationCommitteeHeadId], [t].[ExaminationCommitteeSecretaryId], [t].[ExaminationCommitteeHeadFirstName], [t].[ExaminationCommitteeHeadLastName], [t].[ExaminationCommitteeSecretaryFirstName], [t].[ExaminationCommitteeSecretaryLastName], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId], [t1].[ExaminationCommitteeMemberId], [t1].[ExaminationCommitteeMemberFirstName], [t1].[ExaminationCommitteeMemberLastName]
FROM (
    SELECT TOP(1) [s].[SailingExamId], [s].[ExaminationCommitteeId], [s].[SailingExamDate], [s].[SailingExamNumber], [s].[SailingExamPlace], [e].[ExaminationCommitteeId] AS [ExaminationCommitteeId0], [e].[ExaminationCommitteeHeadId], [e].[ExaminationCommitteeSecretaryId], [e0].[ExaminationCommitteeHeadId] AS [ExaminationCommitteeHeadId0], [e0].[ExaminationCommitteeHeadFirstName], [e0].[ExaminationCommitteeHeadLastName], [e1].[ExaminationCommitteeSecretaryId] AS [ExaminationCommitteeSecretaryId0], [e1].[ExaminationCommitteeSecretaryFirstName], [e1].[ExaminationCommitteeSecretaryLastName]
    FROM [SailingExams] AS [s]
    LEFT JOIN [ExaminationCommittees] AS [e] ON [s].[ExaminationCommitteeId] = [e].[ExaminationCommitteeId]
    LEFT JOIN [ExaminationCommitteeHeads] AS [e0] ON [e].[ExaminationCommitteeHeadId] = [e0].[ExaminationCommitteeHeadId]
    LEFT JOIN [ExaminationCommitteeSecretaries] AS [e1] ON [e].[ExaminationCommitteeSecretaryId] = [e1].[ExaminationCommitteeSecretaryId]
    WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0
) AS [t]
LEFT JOIN (
    SELECT [s0].[SailingExamsSailingExamId], [s0].[StudentsStudentId], [s1].[StudentId], [s1].[AddressId], [s1].[FirstName], [s1].[LastName], [s1].[Pesel], [s1].[Result]
    FROM [SailingExamStudent] AS [s0]
    INNER JOIN [Students] AS [s1] ON [s0].[StudentsStudentId] = [s1].[StudentId]
) AS [t0] ON [t].[SailingExamId] = [t0].[SailingExamsSailingExamId]
LEFT JOIN (
    SELECT [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [e2].[ExaminationCommitteesExaminationCommitteeId], [e3].[ExaminationCommitteeMemberId], [e3].[ExaminationCommitteeMemberFirstName], [e3].[ExaminationCommitteeMemberLastName]
    FROM [ExaminationCommitteeExaminationCommitteeMember] AS [e2]
    INNER JOIN [ExaminationCommitteeMembers] AS [e3] ON [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId] = [e3].[ExaminationCommitteeMemberId]
) AS [t1] ON [t].[ExaminationCommitteeId0] = [t1].[ExaminationCommitteesExaminationCommitteeId]
ORDER BY [t].[SailingExamId], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId]
2023-11-20 23:37:01.924 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 51.9754ms
2023-11-20 23:37:01.927 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:37:02.035 +01:00 [ERR] Exam with number PV-3-23 has no students or no committee
2023-11-20 23:37:02.037 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-3-23 - - - 404 - - 173.1302ms
2023-11-20 23:37:40.409 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-9-23 - -
2023-11-20 23:37:40.421 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:37:40.423 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-9-23 - - - 204 - - 13.8251ms
2023-11-20 23:37:40.424 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-9-23 - -
2023-11-20 23:37:40.425 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:37:40.426 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:37:40.426 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2023-11-20 23:37:40.429 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-11-20 23:37:40.433 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[SailingExamId], [t].[ExaminationCommitteeId], [t].[SailingExamDate], [t].[SailingExamNumber], [t].[SailingExamPlace], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t0].[AddressId], [t0].[FirstName], [t0].[LastName], [t0].[Pesel], [t0].[Result], [t].[ExaminationCommitteeHeadId], [t].[ExaminationCommitteeSecretaryId], [t].[ExaminationCommitteeHeadFirstName], [t].[ExaminationCommitteeHeadLastName], [t].[ExaminationCommitteeSecretaryFirstName], [t].[ExaminationCommitteeSecretaryLastName], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId], [t1].[ExaminationCommitteeMemberId], [t1].[ExaminationCommitteeMemberFirstName], [t1].[ExaminationCommitteeMemberLastName]
FROM (
    SELECT TOP(1) [s].[SailingExamId], [s].[ExaminationCommitteeId], [s].[SailingExamDate], [s].[SailingExamNumber], [s].[SailingExamPlace], [e].[ExaminationCommitteeId] AS [ExaminationCommitteeId0], [e].[ExaminationCommitteeHeadId], [e].[ExaminationCommitteeSecretaryId], [e0].[ExaminationCommitteeHeadId] AS [ExaminationCommitteeHeadId0], [e0].[ExaminationCommitteeHeadFirstName], [e0].[ExaminationCommitteeHeadLastName], [e1].[ExaminationCommitteeSecretaryId] AS [ExaminationCommitteeSecretaryId0], [e1].[ExaminationCommitteeSecretaryFirstName], [e1].[ExaminationCommitteeSecretaryLastName]
    FROM [SailingExams] AS [s]
    LEFT JOIN [ExaminationCommittees] AS [e] ON [s].[ExaminationCommitteeId] = [e].[ExaminationCommitteeId]
    LEFT JOIN [ExaminationCommitteeHeads] AS [e0] ON [e].[ExaminationCommitteeHeadId] = [e0].[ExaminationCommitteeHeadId]
    LEFT JOIN [ExaminationCommitteeSecretaries] AS [e1] ON [e].[ExaminationCommitteeSecretaryId] = [e1].[ExaminationCommitteeSecretaryId]
    WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0
) AS [t]
LEFT JOIN (
    SELECT [s0].[SailingExamsSailingExamId], [s0].[StudentsStudentId], [s1].[StudentId], [s1].[AddressId], [s1].[FirstName], [s1].[LastName], [s1].[Pesel], [s1].[Result]
    FROM [SailingExamStudent] AS [s0]
    INNER JOIN [Students] AS [s1] ON [s0].[StudentsStudentId] = [s1].[StudentId]
) AS [t0] ON [t].[SailingExamId] = [t0].[SailingExamsSailingExamId]
LEFT JOIN (
    SELECT [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [e2].[ExaminationCommitteesExaminationCommitteeId], [e3].[ExaminationCommitteeMemberId], [e3].[ExaminationCommitteeMemberFirstName], [e3].[ExaminationCommitteeMemberLastName]
    FROM [ExaminationCommitteeExaminationCommitteeMember] AS [e2]
    INNER JOIN [ExaminationCommitteeMembers] AS [e3] ON [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId] = [e3].[ExaminationCommitteeMemberId]
) AS [t1] ON [t].[ExaminationCommitteeId0] = [t1].[ExaminationCommitteesExaminationCommitteeId]
ORDER BY [t].[SailingExamId], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId]
2023-11-20 23:37:40.472 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 44.6389ms
2023-11-20 23:37:40.475 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:37:40.598 +01:00 [ERR] Exam with number PV-9-23 has no students or no committee
2023-11-20 23:37:40.600 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-9-23 - - - 404 - - 175.8005ms
2023-11-20 23:37:52.602 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-1-23 - -
2023-11-20 23:37:52.604 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:37:52.606 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-1-23 - - - 204 - - 4.8526ms
2023-11-20 23:37:52.609 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-1-23 - -
2023-11-20 23:37:52.610 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:37:52.611 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:37:52.612 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2023-11-20 23:37:52.615 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-11-20 23:37:52.646 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 32.6806ms
2023-11-20 23:37:52.647 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:37:52.733 +01:00 [ERR] No exam with number PV-1-23 was found
2023-11-20 23:37:52.735 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-1-23 - - - 404 - - 126.2036ms
2023-11-20 23:38:11.119 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-5-23 - -
2023-11-20 23:38:11.123 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:38:11.124 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-5-23 - - - 204 - - 4.9226ms
2023-11-20 23:38:11.126 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-5-23 - -
2023-11-20 23:38:11.127 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:38:11.127 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:38:11.129 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2023-11-20 23:38:11.134 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-11-20 23:38:11.138 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[SailingExamId], [t].[ExaminationCommitteeId], [t].[SailingExamDate], [t].[SailingExamNumber], [t].[SailingExamPlace], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t0].[AddressId], [t0].[FirstName], [t0].[LastName], [t0].[Pesel], [t0].[Result], [t].[ExaminationCommitteeHeadId], [t].[ExaminationCommitteeSecretaryId], [t].[ExaminationCommitteeHeadFirstName], [t].[ExaminationCommitteeHeadLastName], [t].[ExaminationCommitteeSecretaryFirstName], [t].[ExaminationCommitteeSecretaryLastName], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId], [t1].[ExaminationCommitteeMemberId], [t1].[ExaminationCommitteeMemberFirstName], [t1].[ExaminationCommitteeMemberLastName]
FROM (
    SELECT TOP(1) [s].[SailingExamId], [s].[ExaminationCommitteeId], [s].[SailingExamDate], [s].[SailingExamNumber], [s].[SailingExamPlace], [e].[ExaminationCommitteeId] AS [ExaminationCommitteeId0], [e].[ExaminationCommitteeHeadId], [e].[ExaminationCommitteeSecretaryId], [e0].[ExaminationCommitteeHeadId] AS [ExaminationCommitteeHeadId0], [e0].[ExaminationCommitteeHeadFirstName], [e0].[ExaminationCommitteeHeadLastName], [e1].[ExaminationCommitteeSecretaryId] AS [ExaminationCommitteeSecretaryId0], [e1].[ExaminationCommitteeSecretaryFirstName], [e1].[ExaminationCommitteeSecretaryLastName]
    FROM [SailingExams] AS [s]
    LEFT JOIN [ExaminationCommittees] AS [e] ON [s].[ExaminationCommitteeId] = [e].[ExaminationCommitteeId]
    LEFT JOIN [ExaminationCommitteeHeads] AS [e0] ON [e].[ExaminationCommitteeHeadId] = [e0].[ExaminationCommitteeHeadId]
    LEFT JOIN [ExaminationCommitteeSecretaries] AS [e1] ON [e].[ExaminationCommitteeSecretaryId] = [e1].[ExaminationCommitteeSecretaryId]
    WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0
) AS [t]
LEFT JOIN (
    SELECT [s0].[SailingExamsSailingExamId], [s0].[StudentsStudentId], [s1].[StudentId], [s1].[AddressId], [s1].[FirstName], [s1].[LastName], [s1].[Pesel], [s1].[Result]
    FROM [SailingExamStudent] AS [s0]
    INNER JOIN [Students] AS [s1] ON [s0].[StudentsStudentId] = [s1].[StudentId]
) AS [t0] ON [t].[SailingExamId] = [t0].[SailingExamsSailingExamId]
LEFT JOIN (
    SELECT [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [e2].[ExaminationCommitteesExaminationCommitteeId], [e3].[ExaminationCommitteeMemberId], [e3].[ExaminationCommitteeMemberFirstName], [e3].[ExaminationCommitteeMemberLastName]
    FROM [ExaminationCommitteeExaminationCommitteeMember] AS [e2]
    INNER JOIN [ExaminationCommitteeMembers] AS [e3] ON [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId] = [e3].[ExaminationCommitteeMemberId]
) AS [t1] ON [t].[ExaminationCommitteeId0] = [t1].[ExaminationCommitteesExaminationCommitteeId]
ORDER BY [t].[SailingExamId], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId]
2023-11-20 23:38:11.142 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.SailingExamDto'.
2023-11-20 23:38:11.143 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 10.7148ms
2023-11-20 23:38:11.145 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:38:11.146 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-5-23 - - - 200 794 application/json;+charset=utf-8 19.8492ms
2023-11-20 23:38:35.797 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-2-22 - -
2023-11-20 23:38:35.798 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:38:35.800 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-2-22 - - - 204 - - 3.5870ms
2023-11-20 23:38:35.802 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-2-22 - -
2023-11-20 23:38:35.803 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:38:35.804 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:38:35.805 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2023-11-20 23:38:35.810 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-11-20 23:38:35.860 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 53.2936ms
2023-11-20 23:38:35.864 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:38:35.983 +01:00 [ERR] No exam with number PV-2-22 was found
2023-11-20 23:38:35.986 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-2-22 - - - 404 - - 183.2633ms
2023-11-20 23:39:01.774 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-5-22 - -
2023-11-20 23:39:01.777 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:39:01.778 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-5-22 - - - 204 - - 3.6905ms
2023-11-20 23:39:01.779 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-5-22 - -
2023-11-20 23:39:01.780 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:39:01.781 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:39:01.781 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2023-11-20 23:39:01.786 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-11-20 23:39:01.790 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[SailingExamId], [t].[ExaminationCommitteeId], [t].[SailingExamDate], [t].[SailingExamNumber], [t].[SailingExamPlace], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t0].[AddressId], [t0].[FirstName], [t0].[LastName], [t0].[Pesel], [t0].[Result], [t].[ExaminationCommitteeHeadId], [t].[ExaminationCommitteeSecretaryId], [t].[ExaminationCommitteeHeadFirstName], [t].[ExaminationCommitteeHeadLastName], [t].[ExaminationCommitteeSecretaryFirstName], [t].[ExaminationCommitteeSecretaryLastName], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId], [t1].[ExaminationCommitteeMemberId], [t1].[ExaminationCommitteeMemberFirstName], [t1].[ExaminationCommitteeMemberLastName]
FROM (
    SELECT TOP(1) [s].[SailingExamId], [s].[ExaminationCommitteeId], [s].[SailingExamDate], [s].[SailingExamNumber], [s].[SailingExamPlace], [e].[ExaminationCommitteeId] AS [ExaminationCommitteeId0], [e].[ExaminationCommitteeHeadId], [e].[ExaminationCommitteeSecretaryId], [e0].[ExaminationCommitteeHeadId] AS [ExaminationCommitteeHeadId0], [e0].[ExaminationCommitteeHeadFirstName], [e0].[ExaminationCommitteeHeadLastName], [e1].[ExaminationCommitteeSecretaryId] AS [ExaminationCommitteeSecretaryId0], [e1].[ExaminationCommitteeSecretaryFirstName], [e1].[ExaminationCommitteeSecretaryLastName]
    FROM [SailingExams] AS [s]
    LEFT JOIN [ExaminationCommittees] AS [e] ON [s].[ExaminationCommitteeId] = [e].[ExaminationCommitteeId]
    LEFT JOIN [ExaminationCommitteeHeads] AS [e0] ON [e].[ExaminationCommitteeHeadId] = [e0].[ExaminationCommitteeHeadId]
    LEFT JOIN [ExaminationCommitteeSecretaries] AS [e1] ON [e].[ExaminationCommitteeSecretaryId] = [e1].[ExaminationCommitteeSecretaryId]
    WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0
) AS [t]
LEFT JOIN (
    SELECT [s0].[SailingExamsSailingExamId], [s0].[StudentsStudentId], [s1].[StudentId], [s1].[AddressId], [s1].[FirstName], [s1].[LastName], [s1].[Pesel], [s1].[Result]
    FROM [SailingExamStudent] AS [s0]
    INNER JOIN [Students] AS [s1] ON [s0].[StudentsStudentId] = [s1].[StudentId]
) AS [t0] ON [t].[SailingExamId] = [t0].[SailingExamsSailingExamId]
LEFT JOIN (
    SELECT [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [e2].[ExaminationCommitteesExaminationCommitteeId], [e3].[ExaminationCommitteeMemberId], [e3].[ExaminationCommitteeMemberFirstName], [e3].[ExaminationCommitteeMemberLastName]
    FROM [ExaminationCommitteeExaminationCommitteeMember] AS [e2]
    INNER JOIN [ExaminationCommitteeMembers] AS [e3] ON [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId] = [e3].[ExaminationCommitteeMemberId]
) AS [t1] ON [t].[ExaminationCommitteeId0] = [t1].[ExaminationCommitteesExaminationCommitteeId]
ORDER BY [t].[SailingExamId], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId]
2023-11-20 23:39:01.795 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.SailingExamDto'.
2023-11-20 23:39:01.797 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 13.8525ms
2023-11-20 23:39:01.798 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:39:01.799 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-5-22 - - - 200 1073 application/json;+charset=utf-8 20.3424ms
2023-11-20 23:39:29.150 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-7-22 - -
2023-11-20 23:39:29.152 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:39:29.153 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-7-22 - - - 204 - - 3.6186ms
2023-11-20 23:39:29.155 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-7-22 - -
2023-11-20 23:39:29.155 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:39:29.164 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:39:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:39:29.239 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:39:29'.
2023-11-20 23:39:29.241 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2023-11-20 23:39:29.260 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-20 23:39:29.263 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-7-22 - - - 401 0 - 108.4394ms
2023-11-20 23:39:55.402 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-1-22 - -
2023-11-20 23:39:55.404 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:39:55.408 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-1-22 - - - 204 - - 6.3101ms
2023-11-20 23:39:55.409 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-1-22 - -
2023-11-20 23:39:55.410 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:39:55.411 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:39:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:39:55.414 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:39:55'.
2023-11-20 23:39:55.414 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2023-11-20 23:39:55.415 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-20 23:39:55.416 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-1-22 - - - 401 0 - 6.8561ms
2023-11-20 23:40:06.327 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-2-22 - -
2023-11-20 23:40:06.330 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:40:06.332 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-2-22 - - - 204 - - 5.7969ms
2023-11-20 23:40:06.336 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-2-22 - -
2023-11-20 23:40:06.337 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:40:06.338 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:40:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:40:06.342 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:40:06'.
2023-11-20 23:40:06.343 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2023-11-20 23:40:06.344 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-20 23:40:06.345 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-2-22 - - - 401 0 - 8.9344ms
2023-11-20 23:40:21.087 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-3-22 - -
2023-11-20 23:40:21.089 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:40:21.091 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-3-22 - - - 204 - - 3.8534ms
2023-11-20 23:40:21.092 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-3-22 - -
2023-11-20 23:40:21.093 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:40:21.094 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:40:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:40:21.098 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:40:21'.
2023-11-20 23:40:21.100 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2023-11-20 23:40:21.101 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-20 23:40:21.102 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-3-22 - - - 401 0 - 9.2869ms
2023-11-20 23:40:49.549 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-4-22 - -
2023-11-20 23:40:49.551 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:40:49.553 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-4-22 - - - 204 - - 3.7722ms
2023-11-20 23:40:49.555 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-4-22 - -
2023-11-20 23:40:49.556 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:40:49.559 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:40:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:40:49.562 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:40:49'.
2023-11-20 23:40:49.563 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2023-11-20 23:40:49.564 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-20 23:40:49.564 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-4-22 - - - 401 0 - 9.3507ms
2023-11-20 23:41:03.195 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-7-22 - -
2023-11-20 23:41:03.197 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:41:03.199 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-7-22 - - - 204 - - 5.2474ms
2023-11-20 23:41:03.202 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-7-22 - -
2023-11-20 23:41:03.204 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:41:03.208 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:41:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:41:03.217 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:41:03'.
2023-11-20 23:41:03.219 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2023-11-20 23:41:03.220 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-20 23:41:03.221 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-7-22 - - - 401 0 - 19.6228ms
2023-11-20 23:41:28.011 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-6-23 - -
2023-11-20 23:41:28.013 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:41:28.015 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-6-23 - - - 204 - - 3.9443ms
2023-11-20 23:41:28.017 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-6-23 - -
2023-11-20 23:41:28.018 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:41:28.020 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:41:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:41:28.027 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:41:28'.
2023-11-20 23:41:28.028 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2023-11-20 23:41:28.029 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-20 23:41:28.030 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-6-23 - - - 401 0 - 13.3805ms
2023-11-20 23:41:39.913 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-9-23 - -
2023-11-20 23:41:39.916 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:41:39.918 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-9-23 - - - 204 - - 4.7190ms
2023-11-20 23:41:39.919 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-9-23 - -
2023-11-20 23:41:39.920 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:41:39.921 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:41:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:41:39.924 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:41:39'.
2023-11-20 23:41:39.925 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2023-11-20 23:41:39.925 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-20 23:41:39.926 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-9-23 - - - 401 0 - 7.4556ms
2023-11-20 23:41:56.538 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-12-23 - -
2023-11-20 23:41:56.541 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:41:56.543 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-12-23 - - - 204 - - 5.8356ms
2023-11-20 23:41:56.545 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-12-23 - -
2023-11-20 23:41:56.546 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:41:56.547 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:41:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:41:56.555 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:41:56'.
2023-11-20 23:41:56.556 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2023-11-20 23:41:56.557 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-20 23:41:56.557 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-12-23 - - - 401 0 - 12.6369ms
2023-11-20 23:42:17.482 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-14-23 - -
2023-11-20 23:42:17.485 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:42:17.488 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-14-23 - - - 204 - - 6.7398ms
2023-11-20 23:42:17.497 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-14-23 - -
2023-11-20 23:42:17.501 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:42:17.503 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:42:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:42:17.509 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:42:17'.
2023-11-20 23:42:17.510 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2023-11-20 23:42:17.511 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-20 23:42:17.512 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-14-23 - - - 401 0 - 14.3852ms
2023-11-20 23:42:33.988 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-15-23 - -
2023-11-20 23:42:33.990 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:42:33.991 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-15-23 - - - 204 - - 3.4336ms
2023-11-20 23:42:33.993 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-15-23 - -
2023-11-20 23:42:33.994 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:42:33.995 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:42:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:42:34.001 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:42:33'.
2023-11-20 23:42:34.002 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2023-11-20 23:42:34.003 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-20 23:42:34.004 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-15-23 - - - 401 0 - 10.7065ms
2023-11-20 23:47:30.154 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-3-22 - -
2023-11-20 23:47:30.162 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:47:30.164 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-3-22 - - - 204 - - 10.9479ms
2023-11-20 23:47:30.166 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-3-22 - -
2023-11-20 23:47:30.167 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:47:30.169 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:47:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:47:30.172 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:47:30'.
2023-11-20 23:47:30.173 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2023-11-20 23:47:30.174 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-20 23:47:30.175 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-3-22 - - - 401 0 - 8.9131ms
2023-11-20 23:47:31.550 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - -
2023-11-20 23:47:31.552 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:47:31.554 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - - - 204 - - 3.7356ms
2023-11-20 23:47:31.557 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2023-11-20 23:47:31.558 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:47:31.560 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:47:31'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:47:31.568 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:47:31'.
2023-11-20 23:47:31.568 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2023-11-20 23:47:31.569 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2023-11-20 23:47:31.570 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 13.2500ms
2023-11-20 23:47:32.041 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2023-11-20 23:47:32.043 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:47:32.045 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:47:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:47:32.053 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:47:32'.
2023-11-20 23:47:32.054 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2023-11-20 23:47:32.055 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2023-11-20 23:47:32.057 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 16.4005ms
2023-11-20 23:47:32.165 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2023-11-20 23:47:32.167 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:47:32.169 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:47:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:47:32.173 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:47:32'.
2023-11-20 23:47:32.176 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2023-11-20 23:47:32.178 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2023-11-20 23:47:32.178 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 13.1157ms
2023-11-20 23:47:32.407 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2023-11-20 23:47:32.410 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:47:32.411 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:47:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:47:32.416 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:47:32'.
2023-11-20 23:47:32.416 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2023-11-20 23:47:32.417 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2023-11-20 23:47:32.418 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 10.9223ms
2023-11-20 23:47:32.532 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2023-11-20 23:47:32.534 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:47:32.537 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:47:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:47:32.550 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:47:32'.
2023-11-20 23:47:32.551 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2023-11-20 23:47:32.553 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2023-11-20 23:47:32.555 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 23.1149ms
2023-11-20 23:47:32.772 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2023-11-20 23:47:32.773 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:47:32.775 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:47:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:47:32.782 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:47:32'.
2023-11-20 23:47:32.783 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2023-11-20 23:47:32.783 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2023-11-20 23:47:32.784 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 12.6334ms
2023-11-20 23:49:11.845 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-5-22 - -
2023-11-20 23:49:11.853 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:49:11.855 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-5-22 - - - 204 - - 9.8946ms
2023-11-20 23:49:11.857 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-5-22 - -
2023-11-20 23:49:11.858 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:49:11.860 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:49:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:49:11.864 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:49:11'.
2023-11-20 23:49:11.864 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2023-11-20 23:49:11.865 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-20 23:49:11.866 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-5-22 - - - 401 0 - 8.6900ms
2023-11-20 23:49:13.637 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - -
2023-11-20 23:49:13.638 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:49:13.640 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - - - 204 - - 3.2751ms
2023-11-20 23:49:13.642 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2023-11-20 23:49:13.644 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:49:13.645 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:49:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:49:13.655 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:49:13'.
2023-11-20 23:49:13.657 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2023-11-20 23:49:13.658 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2023-11-20 23:49:13.660 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 18.0045ms
2023-11-20 23:50:40.208 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/students/632568743 - -
2023-11-20 23:50:40.217 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:50:40.219 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/students/632568743 - - - 204 - - 10.6063ms
2023-11-20 23:50:40.220 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/students/632568743 - -
2023-11-20 23:50:40.221 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:50:40.222 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:50:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:50:40.226 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:50:40'.
2023-11-20 23:50:40.227 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2023-11-20 23:50:40.228 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-20 23:50:40.229 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/students/632568743 - - - 401 0 - 8.5194ms
2023-11-20 23:51:31.136 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/login - -
2023-11-20 23:51:31.146 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:51:31.148 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/login - - - 204 - - 12.4699ms
2023-11-20 23:51:31.153 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2023-11-20 23:51:31.155 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:51:31.156 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:51:31'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-11-20 23:51:31.162 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '20.11.2023 22:34:13', Current time: '20.11.2023 22:51:31'.
2023-11-20 23:51:31.163 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2023-11-20 23:51:31.164 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:51:31.183 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2023-11-20 23:51:31.193 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2023-11-20 23:51:31.194 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 24.9745ms
2023-11-20 23:51:31.195 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2023-11-20 23:51:31.202 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 48.3466ms
2023-11-20 23:51:31.211 +01:00 [ERR] Failed executing DbCommand (16ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2023-11-20 23:51:31.213 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2023-11-20 23:51:31.225 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2023-11-20 23:51:31.236 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:51:31.238 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:51:31.239 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 26.2754ms
2023-11-20 23:51:31.240 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 15.6357ms
2023-11-20 23:51:31.245 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2023-11-20 23:51:31.255 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2023-11-20 23:51:31.328 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:51:31.331 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:51:31.334 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2023-11-20 23:51:31.340 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:51:31.346 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:51:31.347 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:51:31.349 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-20 23:51:31.351 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-20 23:51:31.359 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 9.5795ms
2023-11-20 23:51:31.361 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 10.5389ms
2023-11-20 23:51:31.363 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2023-11-20 23:51:31.364 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:51:31.366 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 120.9452ms
2023-11-20 23:51:31.371 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 116.4113ms
2023-11-20 23:51:33.706 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2023-11-20 23:51:33.708 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:51:33.711 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:51:33.713 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:51:33.717 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-20 23:51:33.721 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 3.5374ms
2023-11-20 23:51:33.729 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2023-11-20 23:51:33.734 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 28.3158ms
2023-11-20 23:52:19.006 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-3-22 - -
2023-11-20 23:52:19.009 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:52:19.011 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-3-22 - - - 204 - - 5.6473ms
2023-11-20 23:52:19.015 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-3-22 - -
2023-11-20 23:52:19.018 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:52:19.021 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:52:19.026 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2023-11-20 23:52:19.039 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-11-20 23:52:19.045 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[SailingExamId], [t].[ExaminationCommitteeId], [t].[SailingExamDate], [t].[SailingExamNumber], [t].[SailingExamPlace], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t0].[AddressId], [t0].[FirstName], [t0].[LastName], [t0].[Pesel], [t0].[Result], [t].[ExaminationCommitteeHeadId], [t].[ExaminationCommitteeSecretaryId], [t].[ExaminationCommitteeHeadFirstName], [t].[ExaminationCommitteeHeadLastName], [t].[ExaminationCommitteeSecretaryFirstName], [t].[ExaminationCommitteeSecretaryLastName], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId], [t1].[ExaminationCommitteeMemberId], [t1].[ExaminationCommitteeMemberFirstName], [t1].[ExaminationCommitteeMemberLastName]
FROM (
    SELECT TOP(1) [s].[SailingExamId], [s].[ExaminationCommitteeId], [s].[SailingExamDate], [s].[SailingExamNumber], [s].[SailingExamPlace], [e].[ExaminationCommitteeId] AS [ExaminationCommitteeId0], [e].[ExaminationCommitteeHeadId], [e].[ExaminationCommitteeSecretaryId], [e0].[ExaminationCommitteeHeadId] AS [ExaminationCommitteeHeadId0], [e0].[ExaminationCommitteeHeadFirstName], [e0].[ExaminationCommitteeHeadLastName], [e1].[ExaminationCommitteeSecretaryId] AS [ExaminationCommitteeSecretaryId0], [e1].[ExaminationCommitteeSecretaryFirstName], [e1].[ExaminationCommitteeSecretaryLastName]
    FROM [SailingExams] AS [s]
    LEFT JOIN [ExaminationCommittees] AS [e] ON [s].[ExaminationCommitteeId] = [e].[ExaminationCommitteeId]
    LEFT JOIN [ExaminationCommitteeHeads] AS [e0] ON [e].[ExaminationCommitteeHeadId] = [e0].[ExaminationCommitteeHeadId]
    LEFT JOIN [ExaminationCommitteeSecretaries] AS [e1] ON [e].[ExaminationCommitteeSecretaryId] = [e1].[ExaminationCommitteeSecretaryId]
    WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0
) AS [t]
LEFT JOIN (
    SELECT [s0].[SailingExamsSailingExamId], [s0].[StudentsStudentId], [s1].[StudentId], [s1].[AddressId], [s1].[FirstName], [s1].[LastName], [s1].[Pesel], [s1].[Result]
    FROM [SailingExamStudent] AS [s0]
    INNER JOIN [Students] AS [s1] ON [s0].[StudentsStudentId] = [s1].[StudentId]
) AS [t0] ON [t].[SailingExamId] = [t0].[SailingExamsSailingExamId]
LEFT JOIN (
    SELECT [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [e2].[ExaminationCommitteesExaminationCommitteeId], [e3].[ExaminationCommitteeMemberId], [e3].[ExaminationCommitteeMemberFirstName], [e3].[ExaminationCommitteeMemberLastName]
    FROM [ExaminationCommitteeExaminationCommitteeMember] AS [e2]
    INNER JOIN [ExaminationCommitteeMembers] AS [e3] ON [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId] = [e3].[ExaminationCommitteeMemberId]
) AS [t1] ON [t].[ExaminationCommitteeId0] = [t1].[ExaminationCommitteesExaminationCommitteeId]
ORDER BY [t].[SailingExamId], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId]
2023-11-20 23:52:19.084 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.SailingExamDto'.
2023-11-20 23:52:19.086 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 57.6819ms
2023-11-20 23:52:19.089 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2023-11-20 23:52:19.092 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-3-22 - - - 200 2266 application/json;+charset=utf-8 76.5611ms
2023-11-20 23:52:30.957 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - -
2023-11-20 23:52:30.967 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:52:30.971 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - - - 204 - - 14.3221ms
2023-11-20 23:52:30.973 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2023-11-20 23:52:30.974 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:52:30.977 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2023-11-20 23:52:30.983 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2023-11-20 23:52:30.985 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 11.9916ms
2023-11-20 23:52:41.010 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - -
2023-11-20 23:52:41.014 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:52:41.017 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - - - 204 - - 6.7811ms
2023-11-20 23:52:41.025 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2023-11-20 23:52:41.026 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:52:41.028 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2023-11-20 23:52:41.036 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2023-11-20 23:52:41.039 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 13.9843ms
2023-11-20 23:52:49.337 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - -
2023-11-20 23:52:49.339 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:52:49.344 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - - - 204 - - 7.0631ms
2023-11-20 23:52:49.346 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2023-11-20 23:52:49.347 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:52:49.354 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2023-11-20 23:52:49.356 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2023-11-20 23:52:49.362 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 15.8818ms
2023-11-20 23:53:00.705 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logout - -
2023-11-20 23:53:00.707 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:53:00.709 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logout - - - 204 - - 3.8650ms
2023-11-20 23:53:00.718 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/logout application/json 2
2023-11-20 23:53:00.723 +01:00 [INF] CORS policy execution successful.
2023-11-20 23:53:00.727 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.LogOut (PuntoVitaExams.API)'
2023-11-20 23:53:00.731 +01:00 [INF] Route matched with {action = "LogOut", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogOut() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2023-11-20 23:53:00.753 +01:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2023-11-20 23:53:00.757 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.LogOut (PuntoVitaExams.API) in 20.3822ms
2023-11-20 23:53:00.765 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.LogOut (PuntoVitaExams.API)'
2023-11-20 23:53:00.768 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/logout application/json 2 - 204 - - 48.9199ms
