2024-02-27 11:21:52.107 +01:00 [INF] User profile is available. Using 'C:\Users\Kazimierz Stasiński\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-27 11:21:52.242 +01:00 [INF] Creating key {58b9a4a9-42d4-49b6-baae-2143b091f7b7} with creation date 2024-02-27 10:21:52Z, activation date 2024-02-27 10:21:52Z, and expiration date 2024-05-27 10:21:52Z.
2024-02-27 11:21:52.250 +01:00 [INF] Writing data to file 'C:\Users\Kazimierz Stasiński\AppData\Local\ASP.NET\DataProtection-Keys\key-58b9a4a9-42d4-49b6-baae-2143b091f7b7.xml'.
2024-02-27 11:21:52.521 +01:00 [INF] Now listening on: https://localhost:7169
2024-02-27 11:21:52.523 +01:00 [INF] Now listening on: http://localhost:5080
2024-02-27 11:21:52.528 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-27 11:21:52.529 +01:00 [INF] Hosting environment: Development
2024-02-27 11:21:52.529 +01:00 [INF] Content root path: C:\Users\Kazimierz Stasiński\source\repos\PuntoVitaExams\PuntoVitaExams.API\
2024-02-27 11:37:29.593 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/login - -
2024-02-27 11:37:29.700 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:37:29.716 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/login - - - 204 - - 129.1695ms
2024-02-27 11:37:29.724 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2024-02-27 11:37:29.732 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:37:29.846 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 11:37:29.912 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 11:37:36.393 +01:00 [INF] Executed DbCommand (124ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2024-02-27 11:37:37.005 +01:00 [INF] Executed DbCommand (9ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2024-02-27 11:37:37.026 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2024-02-27 11:37:37.109 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 7180.0358ms
2024-02-27 11:37:37.113 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 11:37:37.138 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 7413.5715ms
2024-02-27 11:37:37.149 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 11:37:37.151 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 11:37:37.169 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:37:37.169 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:37:37.175 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 24.0449ms
2024-02-27 11:37:37.175 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 25.7345ms
2024-02-27 11:37:37.192 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 11:37:37.192 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 11:37:37.232 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:37:37.232 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:37:37.399 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 11:37:37.399 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 11:37:37.403 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 11:37:37.403 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 11:37:37.408 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 11:37:37.411 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 5.5593ms
2024-02-27 11:37:37.413 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 11:37:37.413 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 11:37:37.415 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 222.1334ms
2024-02-27 11:37:37.416 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 8.1026ms
2024-02-27 11:37:37.420 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 11:37:37.422 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 229.3172ms
2024-02-27 11:37:42.110 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 11:37:42.114 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:37:42.122 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 11:37:42.128 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 11:37:42.133 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 11:37:42.135 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 2.7108ms
2024-02-27 11:37:42.143 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 11:37:42.147 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 37.7659ms
2024-02-27 11:37:56.150 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/examinationCommitteeSecretary/ - -
2024-02-27 11:37:56.151 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:37:56.153 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/examinationCommitteeSecretary/ - - - 204 - - 3.7044ms
2024-02-27 11:37:56.156 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/examinationCommitteeSecretary/ - -
2024-02-27 11:37:56.161 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:37:56.165 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.ExaminationCommitteeSecretariesController.GetExaminationCommitteeSecretaries (PuntoVitaExams.API)'
2024-02-27 11:37:56.174 +01:00 [INF] Route matched with {action = "GetExaminationCommitteeSecretaries", controller = "ExaminationCommitteeSecretaries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[PuntoVitaExams.API.Models.ExaminationCommitteeSecretaryDto]]] GetExaminationCommitteeSecretaries() on controller PuntoVitaExams.API.Controllers.ExaminationCommitteeSecretariesController (PuntoVitaExams.API).
2024-02-27 11:37:56.215 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[ExaminationCommitteeSecretaryId], [e].[ExaminationCommitteeSecretaryFirstName], [e].[ExaminationCommitteeSecretaryLastName]
FROM [ExaminationCommitteeSecretaries] AS [e]
ORDER BY [e].[ExaminationCommitteeSecretaryLastName]
2024-02-27 11:37:56.267 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[PuntoVitaExams.API.Models.ExaminationCommitteeSecretaryDto, PuntoVitaExams.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-27 11:37:56.292 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.ExaminationCommitteeSecretariesController.GetExaminationCommitteeSecretaries (PuntoVitaExams.API) in 109.5745ms
2024-02-27 11:37:56.297 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.ExaminationCommitteeSecretariesController.GetExaminationCommitteeSecretaries (PuntoVitaExams.API)'
2024-02-27 11:37:56.302 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/examinationCommitteeSecretary/ - - - 200 418 application/json;+charset=utf-8 145.8856ms
2024-02-27 11:38:30.712 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 11:38:30.723 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:38:30.726 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 14.0063ms
2024-02-27 11:38:30.728 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 11:38:30.742 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 11:38:30.742 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:38:30.753 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:38:30.755 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 27.1642ms
2024-02-27 11:38:30.758 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 11:38:30.761 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 11:38:30.763 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 11:38:30.764 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:38:30.768 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 11:38:30.769 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 11:38:30.770 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 2.8606ms
2024-02-27 11:38:30.772 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 11:38:30.775 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 11:38:30.779 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 11:38:30.781 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 39.1265ms
2024-02-27 11:38:30.784 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 5.121ms
2024-02-27 11:38:30.789 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 11:38:30.790 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 29.4925ms
2024-02-27 11:38:53.835 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 11:38:53.849 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:38:53.850 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 11:38:53.850 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 15.9755ms
2024-02-27 11:38:53.852 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:38:53.854 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 11:38:53.857 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 7.2514ms
2024-02-27 11:38:53.859 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:38:53.860 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 11:38:53.866 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 11:38:53.867 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:38:53.868 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 11:38:53.871 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 11:38:53.875 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 11:38:53.877 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 11:38:53.879 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 5.2004ms
2024-02-27 11:38:53.884 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 11:38:53.887 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 11:38:53.889 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 4.9173ms
2024-02-27 11:38:53.891 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 37.1671ms
2024-02-27 11:38:53.895 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 11:38:53.900 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 40.0759ms
2024-02-27 11:38:56.078 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 11:38:56.080 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:38:56.085 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 11:38:56.088 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 11:38:56.092 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 11:38:56.095 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 2.7561ms
2024-02-27 11:38:56.099 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 11:38:56.103 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 24.9321ms
2024-02-27 11:39:48.802 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-5-22 - -
2024-02-27 11:39:48.805 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:39:48.807 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-5-22 - - - 204 - - 5.1289ms
2024-02-27 11:39:48.810 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-5-22 - -
2024-02-27 11:39:48.812 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:39:48.816 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2024-02-27 11:39:48.829 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2024-02-27 11:39:49.002 +01:00 [INF] Executed DbCommand (22ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-02-27 11:39:49.019 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 186.0314ms
2024-02-27 11:39:49.026 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2024-02-27 11:39:49.029 +01:00 [ERR] No exam with number PV-5-22 was found
2024-02-27 11:39:49.030 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-5-22 - - - 404 - - 220.6583ms
2024-02-27 11:40:59.661 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-5-23 - -
2024-02-27 11:40:59.663 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:40:59.666 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-5-23 - - - 204 - - 5.1271ms
2024-02-27 11:40:59.668 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-5-23 - -
2024-02-27 11:40:59.670 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:40:59.674 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2024-02-27 11:40:59.676 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2024-02-27 11:40:59.693 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-02-27 11:40:59.879 +01:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-27 11:40:59.978 +01:00 [INF] Executed DbCommand (77ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[SailingExamId], [t].[ExaminationCommitteeId], [t].[SailingExamDate], [t].[SailingExamNumber], [t].[SailingExamPlace], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t0].[AddressId], [t0].[FirstName], [t0].[LastName], [t0].[Pesel], [t0].[Result], [t].[ExaminationCommitteeHeadId], [t].[ExaminationCommitteeSecretaryId], [t].[ExaminationCommitteeHeadFirstName], [t].[ExaminationCommitteeHeadLastName], [t].[ExaminationCommitteeSecretaryFirstName], [t].[ExaminationCommitteeSecretaryLastName], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId], [t1].[ExaminationCommitteeMemberId], [t1].[ExaminationCommitteeMemberFirstName], [t1].[ExaminationCommitteeMemberLastName]
FROM (
    SELECT TOP(1) [s].[SailingExamId], [s].[ExaminationCommitteeId], [s].[SailingExamDate], [s].[SailingExamNumber], [s].[SailingExamPlace], [e].[ExaminationCommitteeId] AS [ExaminationCommitteeId0], [e].[ExaminationCommitteeHeadId], [e].[ExaminationCommitteeSecretaryId], [e0].[ExaminationCommitteeHeadId] AS [ExaminationCommitteeHeadId0], [e0].[ExaminationCommitteeHeadFirstName], [e0].[ExaminationCommitteeHeadLastName], [e1].[ExaminationCommitteeSecretaryId] AS [ExaminationCommitteeSecretaryId0], [e1].[ExaminationCommitteeSecretaryFirstName], [e1].[ExaminationCommitteeSecretaryLastName]
    FROM [SailingExams] AS [s]
    LEFT JOIN [ExaminationCommittees] AS [e] ON [s].[ExaminationCommitteeId] = [e].[ExaminationCommitteeId]
    LEFT JOIN [ExaminationCommitteeHeads] AS [e0] ON [e].[ExaminationCommitteeHeadId] = [e0].[ExaminationCommitteeHeadId]
    LEFT JOIN [ExaminationCommitteeSecretaries] AS [e1] ON [e].[ExaminationCommitteeSecretaryId] = [e1].[ExaminationCommitteeSecretaryId]
    WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0
) AS [t]
LEFT JOIN (
    SELECT [s0].[SailingExamsSailingExamId], [s0].[StudentsStudentId], [s1].[StudentId], [s1].[AddressId], [s1].[FirstName], [s1].[LastName], [s1].[Pesel], [s1].[Result]
    FROM [SailingExamStudent] AS [s0]
    INNER JOIN [Students] AS [s1] ON [s0].[StudentsStudentId] = [s1].[StudentId]
) AS [t0] ON [t].[SailingExamId] = [t0].[SailingExamsSailingExamId]
LEFT JOIN (
    SELECT [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [e2].[ExaminationCommitteesExaminationCommitteeId], [e3].[ExaminationCommitteeMemberId], [e3].[ExaminationCommitteeMemberFirstName], [e3].[ExaminationCommitteeMemberLastName]
    FROM [ExaminationCommitteeExaminationCommitteeMember] AS [e2]
    INNER JOIN [ExaminationCommitteeMembers] AS [e3] ON [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId] = [e3].[ExaminationCommitteeMemberId]
) AS [t1] ON [t].[ExaminationCommitteeId0] = [t1].[ExaminationCommitteesExaminationCommitteeId]
ORDER BY [t].[SailingExamId], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId]
2024-02-27 11:41:00.185 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.SailingExamDto'.
2024-02-27 11:41:00.260 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 577.8741ms
2024-02-27 11:41:00.264 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2024-02-27 11:41:00.268 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-5-23 - - - 200 794 application/json;+charset=utf-8 599.6250ms
2024-02-27 11:41:54.237 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-12-23 - -
2024-02-27 11:41:54.239 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:41:54.242 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-12-23 - - - 204 - - 4.5505ms
2024-02-27 11:41:54.244 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-12-23 - -
2024-02-27 11:41:54.247 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:41:54.254 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2024-02-27 11:41:54.257 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2024-02-27 11:41:54.266 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-02-27 11:41:54.275 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[SailingExamId], [t].[ExaminationCommitteeId], [t].[SailingExamDate], [t].[SailingExamNumber], [t].[SailingExamPlace], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t0].[AddressId], [t0].[FirstName], [t0].[LastName], [t0].[Pesel], [t0].[Result], [t].[ExaminationCommitteeHeadId], [t].[ExaminationCommitteeSecretaryId], [t].[ExaminationCommitteeHeadFirstName], [t].[ExaminationCommitteeHeadLastName], [t].[ExaminationCommitteeSecretaryFirstName], [t].[ExaminationCommitteeSecretaryLastName], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId], [t1].[ExaminationCommitteeMemberId], [t1].[ExaminationCommitteeMemberFirstName], [t1].[ExaminationCommitteeMemberLastName]
FROM (
    SELECT TOP(1) [s].[SailingExamId], [s].[ExaminationCommitteeId], [s].[SailingExamDate], [s].[SailingExamNumber], [s].[SailingExamPlace], [e].[ExaminationCommitteeId] AS [ExaminationCommitteeId0], [e].[ExaminationCommitteeHeadId], [e].[ExaminationCommitteeSecretaryId], [e0].[ExaminationCommitteeHeadId] AS [ExaminationCommitteeHeadId0], [e0].[ExaminationCommitteeHeadFirstName], [e0].[ExaminationCommitteeHeadLastName], [e1].[ExaminationCommitteeSecretaryId] AS [ExaminationCommitteeSecretaryId0], [e1].[ExaminationCommitteeSecretaryFirstName], [e1].[ExaminationCommitteeSecretaryLastName]
    FROM [SailingExams] AS [s]
    LEFT JOIN [ExaminationCommittees] AS [e] ON [s].[ExaminationCommitteeId] = [e].[ExaminationCommitteeId]
    LEFT JOIN [ExaminationCommitteeHeads] AS [e0] ON [e].[ExaminationCommitteeHeadId] = [e0].[ExaminationCommitteeHeadId]
    LEFT JOIN [ExaminationCommitteeSecretaries] AS [e1] ON [e].[ExaminationCommitteeSecretaryId] = [e1].[ExaminationCommitteeSecretaryId]
    WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0
) AS [t]
LEFT JOIN (
    SELECT [s0].[SailingExamsSailingExamId], [s0].[StudentsStudentId], [s1].[StudentId], [s1].[AddressId], [s1].[FirstName], [s1].[LastName], [s1].[Pesel], [s1].[Result]
    FROM [SailingExamStudent] AS [s0]
    INNER JOIN [Students] AS [s1] ON [s0].[StudentsStudentId] = [s1].[StudentId]
) AS [t0] ON [t].[SailingExamId] = [t0].[SailingExamsSailingExamId]
LEFT JOIN (
    SELECT [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [e2].[ExaminationCommitteesExaminationCommitteeId], [e3].[ExaminationCommitteeMemberId], [e3].[ExaminationCommitteeMemberFirstName], [e3].[ExaminationCommitteeMemberLastName]
    FROM [ExaminationCommitteeExaminationCommitteeMember] AS [e2]
    INNER JOIN [ExaminationCommitteeMembers] AS [e3] ON [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId] = [e3].[ExaminationCommitteeMemberId]
) AS [t1] ON [t].[ExaminationCommitteeId0] = [t1].[ExaminationCommitteesExaminationCommitteeId]
ORDER BY [t].[SailingExamId], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId]
2024-02-27 11:41:54.290 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 28.3469ms
2024-02-27 11:41:54.293 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2024-02-27 11:41:54.298 +01:00 [ERR] Exam with number PV-12-23 has no students or no committee
2024-02-27 11:41:54.300 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-12-23 - - - 404 - - 55.7373ms
2024-02-27 11:42:24.705 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-14-23 - -
2024-02-27 11:42:24.709 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:42:24.713 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-14-23 - - - 204 - - 7.5601ms
2024-02-27 11:42:24.715 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-14-23 - -
2024-02-27 11:42:24.719 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:42:24.727 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2024-02-27 11:42:24.730 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2024-02-27 11:42:24.740 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-02-27 11:42:24.750 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[SailingExamId], [t].[ExaminationCommitteeId], [t].[SailingExamDate], [t].[SailingExamNumber], [t].[SailingExamPlace], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t0].[AddressId], [t0].[FirstName], [t0].[LastName], [t0].[Pesel], [t0].[Result], [t].[ExaminationCommitteeHeadId], [t].[ExaminationCommitteeSecretaryId], [t].[ExaminationCommitteeHeadFirstName], [t].[ExaminationCommitteeHeadLastName], [t].[ExaminationCommitteeSecretaryFirstName], [t].[ExaminationCommitteeSecretaryLastName], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId], [t1].[ExaminationCommitteeMemberId], [t1].[ExaminationCommitteeMemberFirstName], [t1].[ExaminationCommitteeMemberLastName]
FROM (
    SELECT TOP(1) [s].[SailingExamId], [s].[ExaminationCommitteeId], [s].[SailingExamDate], [s].[SailingExamNumber], [s].[SailingExamPlace], [e].[ExaminationCommitteeId] AS [ExaminationCommitteeId0], [e].[ExaminationCommitteeHeadId], [e].[ExaminationCommitteeSecretaryId], [e0].[ExaminationCommitteeHeadId] AS [ExaminationCommitteeHeadId0], [e0].[ExaminationCommitteeHeadFirstName], [e0].[ExaminationCommitteeHeadLastName], [e1].[ExaminationCommitteeSecretaryId] AS [ExaminationCommitteeSecretaryId0], [e1].[ExaminationCommitteeSecretaryFirstName], [e1].[ExaminationCommitteeSecretaryLastName]
    FROM [SailingExams] AS [s]
    LEFT JOIN [ExaminationCommittees] AS [e] ON [s].[ExaminationCommitteeId] = [e].[ExaminationCommitteeId]
    LEFT JOIN [ExaminationCommitteeHeads] AS [e0] ON [e].[ExaminationCommitteeHeadId] = [e0].[ExaminationCommitteeHeadId]
    LEFT JOIN [ExaminationCommitteeSecretaries] AS [e1] ON [e].[ExaminationCommitteeSecretaryId] = [e1].[ExaminationCommitteeSecretaryId]
    WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0
) AS [t]
LEFT JOIN (
    SELECT [s0].[SailingExamsSailingExamId], [s0].[StudentsStudentId], [s1].[StudentId], [s1].[AddressId], [s1].[FirstName], [s1].[LastName], [s1].[Pesel], [s1].[Result]
    FROM [SailingExamStudent] AS [s0]
    INNER JOIN [Students] AS [s1] ON [s0].[StudentsStudentId] = [s1].[StudentId]
) AS [t0] ON [t].[SailingExamId] = [t0].[SailingExamsSailingExamId]
LEFT JOIN (
    SELECT [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [e2].[ExaminationCommitteesExaminationCommitteeId], [e3].[ExaminationCommitteeMemberId], [e3].[ExaminationCommitteeMemberFirstName], [e3].[ExaminationCommitteeMemberLastName]
    FROM [ExaminationCommitteeExaminationCommitteeMember] AS [e2]
    INNER JOIN [ExaminationCommitteeMembers] AS [e3] ON [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId] = [e3].[ExaminationCommitteeMemberId]
) AS [t1] ON [t].[ExaminationCommitteeId0] = [t1].[ExaminationCommitteesExaminationCommitteeId]
ORDER BY [t].[SailingExamId], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId]
2024-02-27 11:42:24.766 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 32.8104ms
2024-02-27 11:42:24.769 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2024-02-27 11:42:24.772 +01:00 [ERR] Exam with number PV-14-23 has no students or no committee
2024-02-27 11:42:24.775 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-14-23 - - - 404 - - 60.4757ms
2024-02-27 11:43:20.090 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-4-22 - -
2024-02-27 11:43:20.094 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:43:20.098 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-4-22 - - - 204 - - 7.8748ms
2024-02-27 11:43:20.101 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-4-22 - -
2024-02-27 11:43:20.110 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:43:20.113 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2024-02-27 11:43:20.117 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2024-02-27 11:43:20.131 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-02-27 11:43:20.146 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[SailingExamId], [t].[ExaminationCommitteeId], [t].[SailingExamDate], [t].[SailingExamNumber], [t].[SailingExamPlace], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t0].[AddressId], [t0].[FirstName], [t0].[LastName], [t0].[Pesel], [t0].[Result], [t].[ExaminationCommitteeHeadId], [t].[ExaminationCommitteeSecretaryId], [t].[ExaminationCommitteeHeadFirstName], [t].[ExaminationCommitteeHeadLastName], [t].[ExaminationCommitteeSecretaryFirstName], [t].[ExaminationCommitteeSecretaryLastName], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId], [t1].[ExaminationCommitteeMemberId], [t1].[ExaminationCommitteeMemberFirstName], [t1].[ExaminationCommitteeMemberLastName]
FROM (
    SELECT TOP(1) [s].[SailingExamId], [s].[ExaminationCommitteeId], [s].[SailingExamDate], [s].[SailingExamNumber], [s].[SailingExamPlace], [e].[ExaminationCommitteeId] AS [ExaminationCommitteeId0], [e].[ExaminationCommitteeHeadId], [e].[ExaminationCommitteeSecretaryId], [e0].[ExaminationCommitteeHeadId] AS [ExaminationCommitteeHeadId0], [e0].[ExaminationCommitteeHeadFirstName], [e0].[ExaminationCommitteeHeadLastName], [e1].[ExaminationCommitteeSecretaryId] AS [ExaminationCommitteeSecretaryId0], [e1].[ExaminationCommitteeSecretaryFirstName], [e1].[ExaminationCommitteeSecretaryLastName]
    FROM [SailingExams] AS [s]
    LEFT JOIN [ExaminationCommittees] AS [e] ON [s].[ExaminationCommitteeId] = [e].[ExaminationCommitteeId]
    LEFT JOIN [ExaminationCommitteeHeads] AS [e0] ON [e].[ExaminationCommitteeHeadId] = [e0].[ExaminationCommitteeHeadId]
    LEFT JOIN [ExaminationCommitteeSecretaries] AS [e1] ON [e].[ExaminationCommitteeSecretaryId] = [e1].[ExaminationCommitteeSecretaryId]
    WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0
) AS [t]
LEFT JOIN (
    SELECT [s0].[SailingExamsSailingExamId], [s0].[StudentsStudentId], [s1].[StudentId], [s1].[AddressId], [s1].[FirstName], [s1].[LastName], [s1].[Pesel], [s1].[Result]
    FROM [SailingExamStudent] AS [s0]
    INNER JOIN [Students] AS [s1] ON [s0].[StudentsStudentId] = [s1].[StudentId]
) AS [t0] ON [t].[SailingExamId] = [t0].[SailingExamsSailingExamId]
LEFT JOIN (
    SELECT [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [e2].[ExaminationCommitteesExaminationCommitteeId], [e3].[ExaminationCommitteeMemberId], [e3].[ExaminationCommitteeMemberFirstName], [e3].[ExaminationCommitteeMemberLastName]
    FROM [ExaminationCommitteeExaminationCommitteeMember] AS [e2]
    INNER JOIN [ExaminationCommitteeMembers] AS [e3] ON [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId] = [e3].[ExaminationCommitteeMemberId]
) AS [t1] ON [t].[ExaminationCommitteeId0] = [t1].[ExaminationCommitteesExaminationCommitteeId]
ORDER BY [t].[SailingExamId], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId]
2024-02-27 11:43:20.185 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.SailingExamDto'.
2024-02-27 11:43:20.189 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 60.9267ms
2024-02-27 11:43:20.195 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2024-02-27 11:43:20.200 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-4-22 - - - 200 831 application/json;+charset=utf-8 99.3110ms
2024-02-27 11:43:53.260 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-3-22 - -
2024-02-27 11:43:53.263 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:43:53.268 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-3-22 - - - 204 - - 8.0156ms
2024-02-27 11:43:53.270 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-3-22 - -
2024-02-27 11:43:53.273 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:43:53.325 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:43:53'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 11:43:53.421 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:43:53'.
2024-02-27 11:43:53.430 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2024-02-27 11:43:53.443 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-02-27 11:43:53.448 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-3-22 - - - 401 0 - 177.8984ms
2024-02-27 11:44:10.822 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-2-22 - -
2024-02-27 11:44:10.826 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:44:10.831 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-2-22 - - - 204 - - 9.3034ms
2024-02-27 11:44:10.833 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-2-22 - -
2024-02-27 11:44:10.838 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:44:10.843 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:44:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 11:44:10.879 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:44:10'.
2024-02-27 11:44:10.884 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2024-02-27 11:44:10.888 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-02-27 11:44:10.894 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-2-22 - - - 401 0 - 60.6072ms
2024-02-27 11:44:36.752 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-6-23 - -
2024-02-27 11:44:36.754 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:44:36.760 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-6-23 - - - 204 - - 8.1333ms
2024-02-27 11:44:36.763 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-6-23 - -
2024-02-27 11:44:36.769 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:44:36.772 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:44:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 11:44:36.804 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:44:36'.
2024-02-27 11:44:36.813 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2024-02-27 11:44:36.817 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-02-27 11:44:36.824 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-6-23 - - - 401 0 - 61.5698ms
2024-02-27 11:45:44.728 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-7-22 - -
2024-02-27 11:45:44.731 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:45:44.736 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-7-22 - - - 204 - - 7.6136ms
2024-02-27 11:45:44.738 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-7-22 - -
2024-02-27 11:45:44.742 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:45:44.744 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:45:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 11:45:44.773 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:45:44'.
2024-02-27 11:45:44.777 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2024-02-27 11:45:44.783 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-02-27 11:45:44.790 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-7-22 - - - 401 0 - 52.0082ms
2024-02-27 11:46:37.972 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-9-23 - -
2024-02-27 11:46:37.975 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:46:37.979 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-9-23 - - - 204 - - 6.8509ms
2024-02-27 11:46:37.981 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-9-23 - -
2024-02-27 11:46:37.988 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:46:37.992 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:46:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 11:46:38.031 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:46:37'.
2024-02-27 11:46:38.034 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2024-02-27 11:46:38.036 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-02-27 11:46:38.042 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-9-23 - - - 401 0 - 61.6212ms
2024-02-27 11:47:32.739 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-6-23 - -
2024-02-27 11:47:32.741 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:47:32.746 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-6-23 - - - 204 - - 7.2547ms
2024-02-27 11:47:32.749 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-6-23 - -
2024-02-27 11:47:32.752 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:47:32.758 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:47:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 11:47:32.781 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:47:32'.
2024-02-27 11:47:32.788 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2024-02-27 11:47:32.792 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-02-27 11:47:32.796 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-6-23 - - - 401 0 - 46.3925ms
2024-02-27 11:47:51.075 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-1-22 - -
2024-02-27 11:47:51.079 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:47:51.084 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-1-22 - - - 204 - - 9.2246ms
2024-02-27 11:47:51.087 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-1-22 - -
2024-02-27 11:47:51.097 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:47:51.102 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:47:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 11:47:51.133 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:47:51'.
2024-02-27 11:47:51.136 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Manager)
2024-02-27 11:47:51.139 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-02-27 11:47:51.146 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-1-22 - - - 401 0 - 58.8634ms
2024-02-27 11:50:28.784 +01:00 [INF] User profile is available. Using 'C:\Users\Kazimierz Stasiński\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-27 11:50:28.923 +01:00 [INF] Now listening on: https://localhost:7169
2024-02-27 11:50:28.926 +01:00 [INF] Now listening on: http://localhost:5080
2024-02-27 11:50:28.931 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-27 11:50:28.933 +01:00 [INF] Hosting environment: Development
2024-02-27 11:50:28.934 +01:00 [INF] Content root path: C:\Users\Kazimierz Stasiński\source\repos\PuntoVitaExams\PuntoVitaExams.API\
2024-02-27 11:50:37.115 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/login - -
2024-02-27 11:50:37.148 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:50:37.159 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/login - - - 204 - - 46.7805ms
2024-02-27 11:50:37.164 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2024-02-27 11:50:37.167 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:50:37.309 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:50:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 11:50:37.331 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 10:38:36', Current time: '27.02.2024 10:50:37'.
2024-02-27 11:50:37.335 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 11:50:37.362 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 11:50:39.054 +01:00 [INF] Executed DbCommand (41ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2024-02-27 11:50:39.262 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2024-02-27 11:50:39.263 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2024-02-27 11:50:39.302 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 1928.9306ms
2024-02-27 11:50:39.306 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 11:50:39.314 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 2149.7407ms
2024-02-27 11:50:39.333 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 11:50:39.334 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 11:50:39.341 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:50:39.341 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:50:39.344 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 10.2309ms
2024-02-27 11:50:39.346 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 12.0260ms
2024-02-27 11:50:39.352 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 11:50:39.352 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 11:50:39.371 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:50:39.371 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:50:39.397 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 11:50:39.397 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 11:50:39.401 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 11:50:39.402 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 11:50:39.407 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 11:50:39.413 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 11:50:39.413 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 8.111ms
2024-02-27 11:50:39.415 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 5.6553ms
2024-02-27 11:50:39.417 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 11:50:39.418 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 11:50:39.419 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 67.1461ms
2024-02-27 11:50:39.421 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 68.8057ms
2024-02-27 11:50:44.856 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 11:50:44.860 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:50:44.861 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 5.8383ms
2024-02-27 11:50:44.863 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 11:50:44.864 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:50:44.868 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 11:50:44.869 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 11:50:44.871 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 11:50:44.872 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 1.4247ms
2024-02-27 11:50:44.873 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 11:50:44.874 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 11.5543ms
2024-02-27 11:50:58.460 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-1-22 - -
2024-02-27 11:50:58.464 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:50:58.465 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-1-22 - - - 204 - - 5.2170ms
2024-02-27 11:50:58.466 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-1-22 - -
2024-02-27 11:50:58.467 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:50:58.469 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2024-02-27 11:50:58.475 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2024-02-27 11:50:58.500 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-02-27 11:50:58.588 +01:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-27 11:50:58.603 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[SailingExamId], [t].[ExaminationCommitteeId], [t].[SailingExamDate], [t].[SailingExamNumber], [t].[SailingExamPlace], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t0].[AddressId], [t0].[FirstName], [t0].[LastName], [t0].[Pesel], [t0].[Result], [t].[ExaminationCommitteeHeadId], [t].[ExaminationCommitteeSecretaryId], [t].[ExaminationCommitteeHeadFirstName], [t].[ExaminationCommitteeHeadLastName], [t].[ExaminationCommitteeSecretaryFirstName], [t].[ExaminationCommitteeSecretaryLastName], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId], [t1].[ExaminationCommitteeMemberId], [t1].[ExaminationCommitteeMemberFirstName], [t1].[ExaminationCommitteeMemberLastName]
FROM (
    SELECT TOP(1) [s].[SailingExamId], [s].[ExaminationCommitteeId], [s].[SailingExamDate], [s].[SailingExamNumber], [s].[SailingExamPlace], [e].[ExaminationCommitteeId] AS [ExaminationCommitteeId0], [e].[ExaminationCommitteeHeadId], [e].[ExaminationCommitteeSecretaryId], [e0].[ExaminationCommitteeHeadId] AS [ExaminationCommitteeHeadId0], [e0].[ExaminationCommitteeHeadFirstName], [e0].[ExaminationCommitteeHeadLastName], [e1].[ExaminationCommitteeSecretaryId] AS [ExaminationCommitteeSecretaryId0], [e1].[ExaminationCommitteeSecretaryFirstName], [e1].[ExaminationCommitteeSecretaryLastName]
    FROM [SailingExams] AS [s]
    LEFT JOIN [ExaminationCommittees] AS [e] ON [s].[ExaminationCommitteeId] = [e].[ExaminationCommitteeId]
    LEFT JOIN [ExaminationCommitteeHeads] AS [e0] ON [e].[ExaminationCommitteeHeadId] = [e0].[ExaminationCommitteeHeadId]
    LEFT JOIN [ExaminationCommitteeSecretaries] AS [e1] ON [e].[ExaminationCommitteeSecretaryId] = [e1].[ExaminationCommitteeSecretaryId]
    WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0
) AS [t]
LEFT JOIN (
    SELECT [s0].[SailingExamsSailingExamId], [s0].[StudentsStudentId], [s1].[StudentId], [s1].[AddressId], [s1].[FirstName], [s1].[LastName], [s1].[Pesel], [s1].[Result]
    FROM [SailingExamStudent] AS [s0]
    INNER JOIN [Students] AS [s1] ON [s0].[StudentsStudentId] = [s1].[StudentId]
) AS [t0] ON [t].[SailingExamId] = [t0].[SailingExamsSailingExamId]
LEFT JOIN (
    SELECT [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [e2].[ExaminationCommitteesExaminationCommitteeId], [e3].[ExaminationCommitteeMemberId], [e3].[ExaminationCommitteeMemberFirstName], [e3].[ExaminationCommitteeMemberLastName]
    FROM [ExaminationCommitteeExaminationCommitteeMember] AS [e2]
    INNER JOIN [ExaminationCommitteeMembers] AS [e3] ON [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId] = [e3].[ExaminationCommitteeMemberId]
) AS [t1] ON [t].[ExaminationCommitteeId0] = [t1].[ExaminationCommitteesExaminationCommitteeId]
ORDER BY [t].[SailingExamId], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId]
2024-02-27 11:50:58.721 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.SailingExamDto'.
2024-02-27 11:50:58.743 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 264.1088ms
2024-02-27 11:50:58.748 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2024-02-27 11:50:58.751 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-1-22 - - - 200 794 application/json;+charset=utf-8 284.3496ms
2024-02-27 11:51:45.180 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-3-22 - -
2024-02-27 11:51:45.183 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:51:45.186 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/PV-3-22 - - - 204 - - 5.5568ms
2024-02-27 11:51:45.188 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/PV-3-22 - -
2024-02-27 11:51:45.189 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:51:45.191 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2024-02-27 11:51:45.194 +01:00 [INF] Route matched with {action = "GetExamWithStudentsAndCommittee", controller = "SailingExams"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamWithStudentsAndCommittee(System.String) on controller PuntoVitaExams.API.Controllers.SailingExamsController (PuntoVitaExams.API).
2024-02-27 11:51:45.264 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SailingExams] AS [s]
        WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-02-27 11:51:45.270 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__sailingExamNumber_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[SailingExamId], [t].[ExaminationCommitteeId], [t].[SailingExamDate], [t].[SailingExamNumber], [t].[SailingExamPlace], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t0].[AddressId], [t0].[FirstName], [t0].[LastName], [t0].[Pesel], [t0].[Result], [t].[ExaminationCommitteeHeadId], [t].[ExaminationCommitteeSecretaryId], [t].[ExaminationCommitteeHeadFirstName], [t].[ExaminationCommitteeHeadLastName], [t].[ExaminationCommitteeSecretaryFirstName], [t].[ExaminationCommitteeSecretaryLastName], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId], [t1].[ExaminationCommitteeMemberId], [t1].[ExaminationCommitteeMemberFirstName], [t1].[ExaminationCommitteeMemberLastName]
FROM (
    SELECT TOP(1) [s].[SailingExamId], [s].[ExaminationCommitteeId], [s].[SailingExamDate], [s].[SailingExamNumber], [s].[SailingExamPlace], [e].[ExaminationCommitteeId] AS [ExaminationCommitteeId0], [e].[ExaminationCommitteeHeadId], [e].[ExaminationCommitteeSecretaryId], [e0].[ExaminationCommitteeHeadId] AS [ExaminationCommitteeHeadId0], [e0].[ExaminationCommitteeHeadFirstName], [e0].[ExaminationCommitteeHeadLastName], [e1].[ExaminationCommitteeSecretaryId] AS [ExaminationCommitteeSecretaryId0], [e1].[ExaminationCommitteeSecretaryFirstName], [e1].[ExaminationCommitteeSecretaryLastName]
    FROM [SailingExams] AS [s]
    LEFT JOIN [ExaminationCommittees] AS [e] ON [s].[ExaminationCommitteeId] = [e].[ExaminationCommitteeId]
    LEFT JOIN [ExaminationCommitteeHeads] AS [e0] ON [e].[ExaminationCommitteeHeadId] = [e0].[ExaminationCommitteeHeadId]
    LEFT JOIN [ExaminationCommitteeSecretaries] AS [e1] ON [e].[ExaminationCommitteeSecretaryId] = [e1].[ExaminationCommitteeSecretaryId]
    WHERE [s].[SailingExamNumber] = @__sailingExamNumber_0
) AS [t]
LEFT JOIN (
    SELECT [s0].[SailingExamsSailingExamId], [s0].[StudentsStudentId], [s1].[StudentId], [s1].[AddressId], [s1].[FirstName], [s1].[LastName], [s1].[Pesel], [s1].[Result]
    FROM [SailingExamStudent] AS [s0]
    INNER JOIN [Students] AS [s1] ON [s0].[StudentsStudentId] = [s1].[StudentId]
) AS [t0] ON [t].[SailingExamId] = [t0].[SailingExamsSailingExamId]
LEFT JOIN (
    SELECT [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [e2].[ExaminationCommitteesExaminationCommitteeId], [e3].[ExaminationCommitteeMemberId], [e3].[ExaminationCommitteeMemberFirstName], [e3].[ExaminationCommitteeMemberLastName]
    FROM [ExaminationCommitteeExaminationCommitteeMember] AS [e2]
    INNER JOIN [ExaminationCommitteeMembers] AS [e3] ON [e2].[ExaminationCommitteeMembersExaminationCommitteeMemberId] = [e3].[ExaminationCommitteeMemberId]
) AS [t1] ON [t].[ExaminationCommitteeId0] = [t1].[ExaminationCommitteesExaminationCommitteeId]
ORDER BY [t].[SailingExamId], [t].[ExaminationCommitteeId0], [t].[ExaminationCommitteeHeadId0], [t].[ExaminationCommitteeSecretaryId0], [t0].[SailingExamsSailingExamId], [t0].[StudentsStudentId], [t0].[StudentId], [t1].[ExaminationCommitteeMembersExaminationCommitteeMemberId], [t1].[ExaminationCommitteesExaminationCommitteeId]
2024-02-27 11:51:45.291 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.SailingExamDto'.
2024-02-27 11:51:45.294 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API) in 96.7341ms
2024-02-27 11:51:45.298 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.SailingExamsController.GetExamWithStudentsAndCommittee (PuntoVitaExams.API)'
2024-02-27 11:51:45.299 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/PV-3-22 - - - 200 2266 application/json;+charset=utf-8 111.2164ms
2024-02-27 11:51:59.792 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - -
2024-02-27 11:51:59.794 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:51:59.799 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - - - 204 - - 6.5191ms
2024-02-27 11:51:59.800 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2024-02-27 11:51:59.801 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:51:59.802 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2024-02-27 11:51:59.805 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2024-02-27 11:51:59.807 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 6.3367ms
2024-02-27 11:52:14.217 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - -
2024-02-27 11:52:14.221 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:52:14.224 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - - - 204 - - 7.3144ms
2024-02-27 11:52:14.226 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2024-02-27 11:52:14.227 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:52:14.228 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2024-02-27 11:52:14.230 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2024-02-27 11:52:14.231 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 5.4382ms
2024-02-27 11:52:18.443 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2024-02-27 11:52:18.447 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:52:18.449 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2024-02-27 11:52:18.451 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2024-02-27 11:52:18.452 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 8.8342ms
2024-02-27 11:52:25.495 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - -
2024-02-27 11:52:25.498 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:52:25.499 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - - - 204 - - 3.3688ms
2024-02-27 11:52:25.500 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2024-02-27 11:52:25.503 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:52:25.505 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2024-02-27 11:52:25.509 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2024-02-27 11:52:25.510 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 9.4379ms
2024-02-27 11:52:49.893 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - -
2024-02-27 11:52:49.896 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:52:49.900 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/sailingExams/ - - - 204 - - 7.1695ms
2024-02-27 11:52:49.901 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2024-02-27 11:52:49.903 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:52:49.904 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2024-02-27 11:52:49.905 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2024-02-27 11:52:49.906 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 4.2861ms
2024-02-27 11:52:54.456 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/sailingExams/ - -
2024-02-27 11:52:54.457 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:52:54.461 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2024-02-27 11:52:54.463 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2024-02-27 11:52:54.465 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/sailingExams/ - - - 405 0 - 8.2372ms
2024-02-27 11:54:34.746 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logout - -
2024-02-27 11:54:34.749 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:54:34.751 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logout - - - 204 - - 5.2738ms
2024-02-27 11:54:34.754 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/logout application/json 2
2024-02-27 11:54:34.756 +01:00 [INF] CORS policy execution successful.
2024-02-27 11:54:34.757 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.LogOut (PuntoVitaExams.API)'
2024-02-27 11:54:34.764 +01:00 [INF] Route matched with {action = "LogOut", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogOut() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 11:54:34.779 +01:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2024-02-27 11:54:34.780 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.LogOut (PuntoVitaExams.API) in 12.4855ms
2024-02-27 11:54:34.782 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.LogOut (PuntoVitaExams.API)'
2024-02-27 11:54:34.784 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/logout application/json 2 - 204 - - 29.6723ms
2024-02-27 12:02:23.245 +01:00 [INF] User profile is available. Using 'C:\Users\Kazimierz Stasiński\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-27 12:02:28.954 +01:00 [INF] Now listening on: https://localhost:7169
2024-02-27 12:02:28.955 +01:00 [INF] Now listening on: http://localhost:5080
2024-02-27 12:02:28.959 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-27 12:02:28.960 +01:00 [INF] Hosting environment: Development
2024-02-27 12:02:28.961 +01:00 [INF] Content root path: C:\Users\Kazimierz Stasiński\source\repos\PuntoVitaExams\PuntoVitaExams.API\
2024-02-27 12:02:44.543 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/login - -
2024-02-27 12:02:45.034 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:02:45.054 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/login - - - 204 - - 509.4479ms
2024-02-27 12:02:45.057 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2024-02-27 12:02:45.067 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:02:50.922 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:02:50.963 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:03:16.719 +01:00 [INF] Executed DbCommand (2,396ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2024-02-27 12:03:18.758 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/login - -
2024-02-27 12:03:18.765 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:03:18.769 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/login - - - 204 - - 11.3377ms
2024-02-27 12:03:18.774 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2024-02-27 12:03:18.775 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:03:18.781 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:03:18.783 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:03:18.815 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2024-02-27 12:03:19.293 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2024-02-27 12:03:19.301 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2024-02-27 12:03:19.392 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2024-02-27 12:03:19.391 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2024-02-27 12:03:19.504 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 704.2391ms
2024-02-27 12:03:19.504 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 28525.1283ms
2024-02-27 12:03:19.509 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:03:19.509 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:03:19.548 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 773.6563ms
2024-02-27 12:03:19.548 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:03:19.548 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 34490.6328ms
2024-02-27 12:03:19.553 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 12:03:19.570 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:03:19.576 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:03:19.578 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 30.0680ms
2024-02-27 12:03:19.581 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:03:19.581 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 27.6386ms
2024-02-27 12:03:19.583 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 12:03:19.618 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:03:19.618 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:03:19.765 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:03:19.765 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:03:19.769 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:03:19.771 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:03:19.778 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:03:19.778 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:03:19.780 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 2.8844ms
2024-02-27 12:03:19.781 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 6.1005ms
2024-02-27 12:03:19.783 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:03:19.785 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:03:19.786 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 202.9132ms
2024-02-27 12:03:19.788 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 206.3791ms
2024-02-27 12:16:48.776 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:16:48.783 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:16:48.785 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 9.3990ms
2024-02-27 12:16:48.790 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:16:48.790 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:16:48.908 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:04:18', Current time: '27.02.2024 11:16:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 12:16:50.537 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:04:18', Current time: '27.02.2024 11:16:48'.
2024-02-27 12:16:50.543 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-02-27 12:16:50.557 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-02-27 12:16:50.561 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 401 0 - 1771.6447ms
2024-02-27 12:16:51.020 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:16:51.024 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:16:51.077 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:04:18', Current time: '27.02.2024 11:16:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 12:16:51.091 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:04:18', Current time: '27.02.2024 11:16:51'.
2024-02-27 12:16:51.092 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-02-27 12:16:51.094 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-02-27 12:16:51.095 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 401 0 - 75.2059ms
2024-02-27 12:16:51.869 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:16:51.874 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:16:51.972 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:04:18', Current time: '27.02.2024 11:16:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 12:16:51.991 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:04:18', Current time: '27.02.2024 11:16:51'.
2024-02-27 12:16:51.993 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-02-27 12:16:51.994 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-02-27 12:16:51.996 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 401 0 - 127.1876ms
2024-02-27 12:17:00.505 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 12:17:00.521 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:17:00.522 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:17:00.524 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 18.9523ms
2024-02-27 12:17:00.526 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 12:17:00.527 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:17:00.532 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:17:00.534 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 12.2149ms
2024-02-27 12:17:00.548 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:17:00.612 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:04:18', Current time: '27.02.2024 11:17:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 12:17:00.637 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:17:00.658 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:04:18', Current time: '27.02.2024 11:17:00'.
2024-02-27 12:17:00.742 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:04:18', Current time: '27.02.2024 11:17:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 12:17:00.744 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-02-27 12:17:00.764 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:04:18', Current time: '27.02.2024 11:17:00'.
2024-02-27 12:17:00.766 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-02-27 12:17:00.770 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-02-27 12:17:00.774 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 401 0 - 247.3220ms
2024-02-27 12:17:00.822 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-02-27 12:17:00.956 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 401 0 - 407.7733ms
2024-02-27 12:17:04.824 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/login - -
2024-02-27 12:17:04.828 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:17:04.832 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/login - - - 204 - - 8.0023ms
2024-02-27 12:17:04.834 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2024-02-27 12:17:04.835 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:17:04.929 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:04:18', Current time: '27.02.2024 11:17:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 12:17:04.945 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:04:18', Current time: '27.02.2024 11:17:04'.
2024-02-27 12:17:04.948 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:17:04.951 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:17:05.870 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2024-02-27 12:17:05.876 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2024-02-27 12:17:05.879 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2024-02-27 12:17:05.880 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 918.7678ms
2024-02-27 12:17:05.881 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:17:05.883 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 1048.8103ms
2024-02-27 12:17:05.891 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 12:17:05.893 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:17:05.893 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:17:05.899 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 7.4847ms
2024-02-27 12:17:05.901 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:17:05.901 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 12:17:05.903 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 9.6861ms
2024-02-27 12:17:05.905 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:17:05.905 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:17:05.909 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:17:05.911 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:17:05.912 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:17:05.913 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:17:05.915 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:17:05.916 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:17:05.918 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 2.6579ms
2024-02-27 12:17:05.921 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:17:05.923 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:17:05.924 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 2.8018ms
2024-02-27 12:17:05.928 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 26.6316ms
2024-02-27 12:17:05.930 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:17:05.933 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 28.0596ms
2024-02-27 12:17:07.389 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:17:07.391 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:17:07.393 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:17:07.395 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:17:07.400 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:17:07.403 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 2.5727ms
2024-02-27 12:17:07.406 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:17:07.410 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 20.9860ms
2024-02-27 12:20:02.926 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 12:20:02.945 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:20:02.945 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:20:02.947 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 20.0050ms
2024-02-27 12:20:02.948 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:20:02.955 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 12:20:02.958 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 12.1376ms
2024-02-27 12:20:02.960 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:20:02.960 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:20:02.964 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:20:02.965 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:20:02.966 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:20:02.967 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:20:02.968 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:20:02.971 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:20:02.973 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:20:02.976 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 5.443ms
2024-02-27 12:20:02.977 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 4.4083ms
2024-02-27 12:20:02.978 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:20:02.980 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:20:02.981 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 25.8998ms
2024-02-27 12:20:02.982 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 22.0543ms
2024-02-27 12:20:04.699 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:20:04.702 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:20:04.703 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:20:04.704 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:20:04.707 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:20:04.708 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 1.3919ms
2024-02-27 12:20:04.709 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:20:04.710 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 11.4395ms
2024-02-27 12:20:07.347 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 12:20:07.359 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:20:07.361 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:20:07.362 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:20:07.364 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:20:07.368 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:20:07.370 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:20:07.372 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:20:07.374 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:20:07.378 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 6.4534ms
2024-02-27 12:20:07.382 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:20:07.385 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:20:07.386 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 4.6404ms
2024-02-27 12:20:07.388 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 41.3265ms
2024-02-27 12:20:07.391 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:20:07.396 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 34.9791ms
2024-02-27 12:20:13.663 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 12:20:13.678 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:20:13.679 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:20:13.680 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 17.5273ms
2024-02-27 12:20:13.683 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 12:20:13.683 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:20:13.690 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:20:13.691 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 12.4125ms
2024-02-27 12:20:13.693 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:20:13.693 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:20:13.695 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:20:13.696 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:20:13.697 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:20:13.702 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:20:13.703 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:20:13.705 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 3.3431ms
2024-02-27 12:20:13.708 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:20:13.709 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:20:13.711 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 3.3303ms
2024-02-27 12:20:13.712 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 29.5849ms
2024-02-27 12:20:13.714 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:20:13.721 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 27.6241ms
2024-02-27 12:26:50.652 +01:00 [INF] User profile is available. Using 'C:\Users\Kazimierz Stasiński\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-27 12:26:50.805 +01:00 [INF] Now listening on: https://localhost:7169
2024-02-27 12:26:50.809 +01:00 [INF] Now listening on: http://localhost:5080
2024-02-27 12:26:50.813 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-27 12:26:50.814 +01:00 [INF] Hosting environment: Development
2024-02-27 12:26:50.814 +01:00 [INF] Content root path: C:\Users\Kazimierz Stasiński\source\repos\PuntoVitaExams\PuntoVitaExams.API\
2024-02-27 12:27:04.738 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:27:04.776 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:27:04.784 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 49.4099ms
2024-02-27 12:27:04.787 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:27:04.808 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:27:05.032 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:18:05', Current time: '27.02.2024 11:27:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 12:27:05.068 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:18:05', Current time: '27.02.2024 11:27:05'.
2024-02-27 12:27:05.079 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-02-27 12:27:05.092 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-02-27 12:27:05.095 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 401 0 - 307.8379ms
2024-02-27 12:27:08.382 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/login - -
2024-02-27 12:27:08.387 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:27:08.389 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/login - - - 204 - - 7.1957ms
2024-02-27 12:27:08.404 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2024-02-27 12:27:08.406 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:27:08.413 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:18:05', Current time: '27.02.2024 11:27:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-27 12:27:08.428 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '27.02.2024 11:18:05', Current time: '27.02.2024 11:27:08'.
2024-02-27 12:27:08.432 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:27:08.484 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:27:11.443 +01:00 [INF] Executed DbCommand (67ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2024-02-27 12:27:11.733 +01:00 [INF] Executed DbCommand (15ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2024-02-27 12:27:11.764 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2024-02-27 12:27:11.797 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 3303.7695ms
2024-02-27 12:27:11.803 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:27:11.816 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 3411.8428ms
2024-02-27 12:27:11.818 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 12:27:11.820 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:27:11.824 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:27:11.826 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:27:11.829 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 11.5688ms
2024-02-27 12:27:11.830 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 9.7469ms
2024-02-27 12:27:11.832 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 12:27:11.832 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:27:11.836 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:27:11.838 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:27:11.851 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:27:11.851 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:27:11.854 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:27:11.856 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:27:11.859 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:27:11.862 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 3.8243ms
2024-02-27 12:27:11.863 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:27:11.864 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:27:11.866 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 5.8074ms
2024-02-27 12:27:11.867 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 35.0195ms
2024-02-27 12:27:11.868 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:27:11.872 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 40.3586ms
2024-02-27 12:27:15.014 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:27:15.018 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:27:15.022 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:27:15.025 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:27:15.030 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:27:15.032 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 2.3997ms
2024-02-27 12:27:15.033 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:27:15.035 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 20.8400ms
2024-02-27 12:28:02.095 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 12:28:02.108 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:28:02.110 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 14.6937ms
2024-02-27 12:28:02.113 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 12:28:02.113 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:28:02.114 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:28:02.115 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:28:02.117 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 4.2920ms
2024-02-27 12:28:02.117 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:28:02.120 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:28:02.122 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:28:02.127 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:28:02.128 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:28:02.129 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 1.7815ms
2024-02-27 12:28:02.130 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:28:02.130 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:28:02.131 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:28:02.133 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 20.3570ms
2024-02-27 12:28:02.137 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:28:02.146 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 9.1967ms
2024-02-27 12:28:02.147 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:28:02.149 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 26.3335ms
2024-02-27 12:28:04.107 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:28:04.111 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:28:04.114 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:28:04.117 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:28:04.122 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:28:04.127 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 4.6626ms
2024-02-27 12:28:04.128 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:28:04.129 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 21.9985ms
2024-02-27 12:30:59.995 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/examinationCommitteeSecretary/ - -
2024-02-27 12:30:59.997 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:30:59.999 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/examinationCommitteeSecretary/ - - - 204 - - 4.1077ms
2024-02-27 12:31:00.000 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/examinationCommitteeSecretary/ - -
2024-02-27 12:31:00.003 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:31:00.008 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.ExaminationCommitteeSecretariesController.GetExaminationCommitteeSecretaries (PuntoVitaExams.API)'
2024-02-27 12:31:00.019 +01:00 [INF] Route matched with {action = "GetExaminationCommitteeSecretaries", controller = "ExaminationCommitteeSecretaries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[PuntoVitaExams.API.Models.ExaminationCommitteeSecretaryDto]]] GetExaminationCommitteeSecretaries() on controller PuntoVitaExams.API.Controllers.ExaminationCommitteeSecretariesController (PuntoVitaExams.API).
2024-02-27 12:31:00.063 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[ExaminationCommitteeSecretaryId], [e].[ExaminationCommitteeSecretaryFirstName], [e].[ExaminationCommitteeSecretaryLastName]
FROM [ExaminationCommitteeSecretaries] AS [e]
ORDER BY [e].[ExaminationCommitteeSecretaryLastName]
2024-02-27 12:31:00.108 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[PuntoVitaExams.API.Models.ExaminationCommitteeSecretaryDto, PuntoVitaExams.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-27 12:31:00.126 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.ExaminationCommitteeSecretariesController.GetExaminationCommitteeSecretaries (PuntoVitaExams.API) in 94.2966ms
2024-02-27 12:31:00.131 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.ExaminationCommitteeSecretariesController.GetExaminationCommitteeSecretaries (PuntoVitaExams.API)'
2024-02-27 12:31:00.134 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/examinationCommitteeSecretary/ - - - 200 418 application/json;+charset=utf-8 133.8515ms
2024-02-27 12:31:37.162 +01:00 [INF] User profile is available. Using 'C:\Users\Kazimierz Stasiński\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-27 12:31:37.288 +01:00 [INF] Now listening on: https://localhost:7169
2024-02-27 12:31:37.293 +01:00 [INF] Now listening on: http://localhost:5080
2024-02-27 12:31:37.297 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-27 12:31:37.297 +01:00 [INF] Hosting environment: Development
2024-02-27 12:31:37.298 +01:00 [INF] Content root path: C:\Users\Kazimierz Stasiński\source\repos\PuntoVitaExams\PuntoVitaExams.API\
2024-02-27 12:32:44.001 +01:00 [INF] User profile is available. Using 'C:\Users\Kazimierz Stasiński\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-27 12:32:44.126 +01:00 [INF] Now listening on: https://localhost:7169
2024-02-27 12:32:44.130 +01:00 [INF] Now listening on: http://localhost:5080
2024-02-27 12:32:44.135 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-27 12:32:44.140 +01:00 [INF] Hosting environment: Development
2024-02-27 12:32:44.140 +01:00 [INF] Content root path: C:\Users\Kazimierz Stasiński\source\repos\PuntoVitaExams\PuntoVitaExams.API\
2024-02-27 12:33:16.008 +01:00 [INF] User profile is available. Using 'C:\Users\Kazimierz Stasiński\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-27 12:33:16.345 +01:00 [INF] Now listening on: https://localhost:7169
2024-02-27 12:33:16.350 +01:00 [INF] Now listening on: http://localhost:5080
2024-02-27 12:33:16.354 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-27 12:33:16.356 +01:00 [INF] Hosting environment: Development
2024-02-27 12:33:16.357 +01:00 [INF] Content root path: C:\Users\Kazimierz Stasiński\source\repos\PuntoVitaExams\PuntoVitaExams.API\
2024-02-27 12:33:25.799 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/login - -
2024-02-27 12:33:25.859 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:33:25.878 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/login - - - 204 - - 79.1742ms
2024-02-27 12:33:25.882 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2024-02-27 12:33:25.892 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:33:26.213 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:33:26.250 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:33:28.970 +01:00 [INF] Executed DbCommand (107ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2024-02-27 12:37:41.689 +01:00 [INF] Executed DbCommand (14ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2024-02-27 12:37:41.737 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2024-02-27 12:37:41.788 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 255529.2754ms
2024-02-27 12:37:41.793 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:37:41.818 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 12:37:41.821 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:37:41.824 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:37:41.824 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:37:41.828 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 255945.9868ms
2024-02-27 12:37:41.830 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 12.0702ms
2024-02-27 12:37:41.831 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 10.3950ms
2024-02-27 12:37:41.842 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 12:37:41.843 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:37:41.863 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:37:41.863 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:37:41.874 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:37:41.874 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:37:41.876 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:37:41.877 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:37:41.878 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:37:41.881 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:37:41.882 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 4.2125ms
2024-02-27 12:37:41.883 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 4.0928ms
2024-02-27 12:37:41.884 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:37:41.885 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:37:41.886 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 43.5598ms
2024-02-27 12:37:41.887 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 45.2050ms
2024-02-27 12:38:46.540 +01:00 [INF] User profile is available. Using 'C:\Users\Kazimierz Stasiński\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-27 12:38:46.975 +01:00 [INF] Now listening on: https://localhost:7169
2024-02-27 12:38:46.991 +01:00 [INF] Now listening on: http://localhost:5080
2024-02-27 12:38:47.003 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-27 12:38:47.005 +01:00 [INF] Hosting environment: Development
2024-02-27 12:38:47.006 +01:00 [INF] Content root path: C:\Users\Kazimierz Stasiński\source\repos\PuntoVitaExams\PuntoVitaExams.API\
2024-02-27 12:38:51.991 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/login - -
2024-02-27 12:38:52.049 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:38:52.065 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/login - - - 204 - - 77.7534ms
2024-02-27 12:38:52.069 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2024-02-27 12:38:52.073 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:38:52.349 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:38:52.396 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:38:55.018 +01:00 [INF] Executed DbCommand (107ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2024-02-27 12:38:55.333 +01:00 [INF] Executed DbCommand (15ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2024-02-27 12:38:55.376 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2024-02-27 12:38:55.429 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 3024.7188ms
2024-02-27 12:38:55.434 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:38:55.458 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 12:38:55.459 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:38:55.463 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:38:55.463 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:38:55.465 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 3395.1891ms
2024-02-27 12:38:55.465 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 7.4069ms
2024-02-27 12:38:55.466 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 7.0195ms
2024-02-27 12:38:55.467 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 12:38:55.473 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:38:55.493 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:38:55.493 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:38:55.506 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:38:55.506 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:38:55.509 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:38:55.509 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:38:55.529 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:38:55.532 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:38:55.532 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 21.3195ms
2024-02-27 12:38:55.534 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 4.1676ms
2024-02-27 12:38:55.535 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:38:55.536 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:38:55.536 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 69.0804ms
2024-02-27 12:38:55.538 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 64.6333ms
2024-02-27 12:39:31.946 +01:00 [INF] User profile is available. Using 'C:\Users\Kazimierz Stasiński\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-27 12:39:32.069 +01:00 [INF] Now listening on: https://localhost:7169
2024-02-27 12:39:32.074 +01:00 [INF] Now listening on: http://localhost:5080
2024-02-27 12:39:32.079 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-27 12:39:32.080 +01:00 [INF] Hosting environment: Development
2024-02-27 12:39:32.080 +01:00 [INF] Content root path: C:\Users\Kazimierz Stasiński\source\repos\PuntoVitaExams\PuntoVitaExams.API\
2024-02-27 12:39:40.226 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/login - -
2024-02-27 12:39:40.255 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:39:40.263 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/login - - - 204 - - 40.1154ms
2024-02-27 12:39:40.270 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2024-02-27 12:39:40.274 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:39:40.424 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:39:40.449 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:39:41.915 +01:00 [INF] Executed DbCommand (47ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2024-02-27 12:39:42.091 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2024-02-27 12:39:42.118 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2024-02-27 12:39:42.155 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 1697.4361ms
2024-02-27 12:39:42.160 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:39:42.168 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 1897.4661ms
2024-02-27 12:39:42.177 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 12:39:42.177 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:39:42.182 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:39:42.182 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:39:42.185 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 7.3021ms
2024-02-27 12:39:42.186 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 8.3557ms
2024-02-27 12:39:42.187 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 12:39:42.187 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:39:42.209 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:39:42.209 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:39:42.218 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:39:42.218 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:39:42.220 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:39:42.221 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:39:42.226 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:39:42.229 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 4.1486ms
2024-02-27 12:39:42.230 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:39:42.230 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:39:42.232 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 4.1732ms
2024-02-27 12:39:42.233 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 45.3767ms
2024-02-27 12:39:42.234 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:39:42.236 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 49.1019ms
2024-02-27 12:47:37.517 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:47:37.520 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:47:37.523 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 5.8088ms
2024-02-27 12:47:37.525 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:47:37.527 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:47:37.533 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:47:37.537 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:47:37.547 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:47:37.548 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 1.8044ms
2024-02-27 12:47:37.549 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:47:37.551 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 25.3491ms
2024-02-27 12:47:47.860 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 12:47:47.877 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:47:47.877 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:47:47.880 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 19.9690ms
2024-02-27 12:47:47.881 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:47:47.883 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 12:47:47.885 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 8.2391ms
2024-02-27 12:47:47.886 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:47:47.887 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:47:47.889 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:47:47.890 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:47:47.895 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:47:47.897 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:47:47.901 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:47:47.902 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:47:47.905 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 4.1907ms
2024-02-27 12:47:47.912 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:47:47.913 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:47:47.914 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 2.3744ms
2024-02-27 12:47:47.915 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 32.2397ms
2024-02-27 12:47:47.917 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:47:47.921 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 33.6703ms
2024-02-27 12:47:50.064 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:47:50.068 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:47:50.070 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:47:50.071 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:47:50.073 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:47:50.074 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 1.2489ms
2024-02-27 12:47:50.076 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:47:50.077 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 12.9605ms
2024-02-27 12:56:25.731 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:56:25.731 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 12:56:25.743 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:56:25.741 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:56:25.749 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 17.7151ms
2024-02-27 12:56:25.752 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 20.5796ms
2024-02-27 12:56:25.755 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 12:56:25.759 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:56:25.758 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:56:25.765 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:56:25.767 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:56:25.770 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:56:25.772 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:56:25.781 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:56:25.782 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:56:25.784 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 4.5789ms
2024-02-27 12:56:25.791 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:56:25.794 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:56:25.797 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 6.7055ms
2024-02-27 12:56:25.799 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 44.2940ms
2024-02-27 12:56:25.801 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:56:25.810 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 51.7785ms
2024-02-27 12:56:32.433 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logout - -
2024-02-27 12:56:32.437 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:56:32.440 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logout - - - 204 - - 6.7284ms
2024-02-27 12:56:32.444 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/logout application/json 2
2024-02-27 12:56:32.445 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:56:32.447 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.LogOut (PuntoVitaExams.API)'
2024-02-27 12:56:32.451 +01:00 [INF] Route matched with {action = "LogOut", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogOut() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:56:32.460 +01:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2024-02-27 12:56:32.461 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.LogOut (PuntoVitaExams.API) in 6.0864ms
2024-02-27 12:56:32.462 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.LogOut (PuntoVitaExams.API)'
2024-02-27 12:56:32.463 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/logout application/json 2 - 204 - - 19.6482ms
2024-02-27 12:57:54.267 +01:00 [INF] User profile is available. Using 'C:\Users\Kazimierz Stasiński\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-27 12:57:54.402 +01:00 [INF] Now listening on: https://localhost:7169
2024-02-27 12:57:54.405 +01:00 [INF] Now listening on: http://localhost:5080
2024-02-27 12:57:54.409 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-27 12:57:54.410 +01:00 [INF] Hosting environment: Development
2024-02-27 12:57:54.410 +01:00 [INF] Content root path: C:\Users\Kazimierz Stasiński\source\repos\PuntoVitaExams\PuntoVitaExams.API\
2024-02-27 12:58:05.837 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/login - -
2024-02-27 12:58:05.867 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:58:05.874 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/login - - - 204 - - 40.3797ms
2024-02-27 12:58:05.879 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2024-02-27 12:58:05.881 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:58:05.921 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:58:05.948 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:58:08.620 +01:00 [INF] Executed DbCommand (77ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2024-02-27 12:58:09.005 +01:00 [INF] Executed DbCommand (17ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2024-02-27 12:58:09.062 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2024-02-27 12:58:09.119 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 3163.7685ms
2024-02-27 12:58:09.123 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 12:58:09.136 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 3256.4314ms
2024-02-27 12:58:09.154 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 12:58:09.154 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:58:09.163 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:58:09.163 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:58:09.165 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 10.4223ms
2024-02-27 12:58:09.166 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 11.6733ms
2024-02-27 12:58:09.171 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 12:58:09.171 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 12:58:09.200 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:58:09.200 +01:00 [INF] CORS policy execution successful.
2024-02-27 12:58:09.272 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:58:09.272 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:58:09.276 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:58:09.277 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 12:58:09.280 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:58:09.283 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 3.7028ms
2024-02-27 12:58:09.284 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 12:58:09.284 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 12:58:09.286 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 114.9002ms
2024-02-27 12:58:09.287 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 5.7562ms
2024-02-27 12:58:09.289 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 12:58:09.290 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 119.0903ms
2024-02-27 13:02:14.957 +01:00 [INF] User profile is available. Using 'C:\Users\Kazimierz Stasiński\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-27 13:02:15.086 +01:00 [INF] Now listening on: https://localhost:7169
2024-02-27 13:02:15.090 +01:00 [INF] Now listening on: http://localhost:5080
2024-02-27 13:02:15.095 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-27 13:02:15.097 +01:00 [INF] Hosting environment: Development
2024-02-27 13:02:15.097 +01:00 [INF] Content root path: C:\Users\Kazimierz Stasiński\source\repos\PuntoVitaExams\PuntoVitaExams.API\
2024-02-27 13:02:33.110 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/login - -
2024-02-27 13:02:33.153 +01:00 [INF] CORS policy execution successful.
2024-02-27 13:02:33.160 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/login - - - 204 - - 53.1470ms
2024-02-27 13:02:33.166 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7169/api/account/login application/json 54
2024-02-27 13:02:33.168 +01:00 [INF] CORS policy execution successful.
2024-02-27 13:02:33.313 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 13:02:33.340 +01:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Login(PuntoVitaExams.API.Models.LoginDto) on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 13:02:34.843 +01:00 [INF] Executed DbCommand (42ms) [Parameters=[@__dto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[PasswordHash], [u].[PasswordSalt], [u].[RefreshToken], [u].[RoleId], [u].[TokenCreated], [u].[TokenExpires], [r].[Id], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[Id]
WHERE [u].[Email] = @__dto_Email_0
2024-02-27 13:02:35.014 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [RefreshToken] = @p0, [TokenCreated] = @p1, [TokenExpires] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2024-02-27 13:02:35.040 +01:00 [INF] Executing OkObjectResult, writing value of type 'PuntoVitaExams.API.Models.LoginResponseDto'.
2024-02-27 13:02:35.075 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API) in 1727.2507ms
2024-02-27 13:02:35.080 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.Login (PuntoVitaExams.API)'
2024-02-27 13:02:35.089 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7169/api/account/login application/json 54 - 200 879 application/json;+charset=utf-8 1922.4187ms
2024-02-27 13:02:35.102 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/logged - -
2024-02-27 13:02:35.116 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - -
2024-02-27 13:02:35.119 +01:00 [INF] CORS policy execution successful.
2024-02-27 13:02:35.119 +01:00 [INF] CORS policy execution successful.
2024-02-27 13:02:35.121 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/loggedRole - - - 204 - - 5.1945ms
2024-02-27 13:02:35.124 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/loggedRole - -
2024-02-27 13:02:35.125 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7169/api/account/logged - - - 204 - - 22.7099ms
2024-02-27 13:02:35.127 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7169/api/account/logged - -
2024-02-27 13:02:35.146 +01:00 [INF] CORS policy execution successful.
2024-02-27 13:02:35.146 +01:00 [INF] CORS policy execution successful.
2024-02-27 13:02:35.155 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 13:02:35.155 +01:00 [INF] Executing endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 13:02:35.157 +01:00 [INF] Route matched with {action = "GetMe", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetMe() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 13:02:35.158 +01:00 [INF] Route matched with {action = "GetRole", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetRole() on controller PuntoVitaExams.API.Controllers.AccountController (PuntoVitaExams.API).
2024-02-27 13:02:35.161 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 13:02:35.164 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API) in 3.8783ms
2024-02-27 13:02:35.165 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2024-02-27 13:02:35.165 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetMe (PuntoVitaExams.API)'
2024-02-27 13:02:35.168 +01:00 [INF] Executed action PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API) in 5.7109ms
2024-02-27 13:02:35.169 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/logged - - - 200 - text/plain;+charset=utf-8 42.4323ms
2024-02-27 13:02:35.171 +01:00 [INF] Executed endpoint 'PuntoVitaExams.API.Controllers.AccountController.GetRole (PuntoVitaExams.API)'
2024-02-27 13:02:35.174 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7169/api/account/loggedRole - - - 200 - text/plain;+charset=utf-8 50.1682ms
